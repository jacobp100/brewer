{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap d0eb6a40f7bcc829b12b","webpack:///./index.js","webpack:///./~/color-space/xyz.js","webpack:///./~/color-space/rgb.js","webpack:///./~/color-space/hsl.js","webpack:///./~/color-space/lchuv.js","webpack:///./~/color-space/hsv.js","webpack:///./~/color-space/lab.js","webpack:///./~/color-space/luv.js","webpack:///./~/color-space/~/husl/husl.js","webpack:///./~/color-space/cmyk.js","webpack:///./~/color-space/husl.js","webpack:///./~/color-space/huslp.js","webpack:///./~/color-space/hwb.js","webpack:///./~/color-space/index.js","webpack:///./~/color-space/lchab.js","webpack:///./~/color-space/util/add-convertor.js","webpack:///./palettes/css.json","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/module.js"],"names":["colorForge","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Color","values","spaceAlpha","space","this","alpha","originalColor","undefined","colorOperationFactory","operation","alphaFn","other","a","convert","b","aValues","map","value","bValues","zipValues","out","i","length","hexDouble","hex","toString","substr","addSubtractAlphaFn","Math","min","sqrt","colorSpace","cssColors","prototype","functionSuffix","alphaText","indexOf","join","toHex","raw","round","clone","self","slice","toCss","tolerance","distanceTo","name","selfRgb","reduce","zip","abs","Object","keys","distance","filter","Infinity","toClosestCss","spaces","newValues","newColor","Error","mix","amountMode","mode","amount","thisValues","otherValues","colorMode","index","channel","max","lighten","brightness","darken","channelMultiply","add","subtract","multiply","divide","screen","overlay","dodge","burn","exponent","power","pow","freeze","forEach","string","len","hasAlphaComponent","offset","alphaMultiplicationFactor","parseInt","rgb","channelString","css","alias","whitepoint",2,"A","C","D50","D55","D65","D75","F2","F7","F11","E",10,"xyz","r","g","x","y","z","hsl","t1","t2","t3","val","h","s","l","delta","luv","lchuv","u","v","hr","PI","cos","sin","arg","atan2","hsv","hi","floor","f","q","t","sl","sv","lab","y2","o","_u","_v","xn","yn","zn","un","vn","k","e","yr","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","L_to_Y","Y_to_L","conv","distanceFromPole","dotProduct","epsilon","fromLinear","getBounds","intersectLineLine","kappa","lengthOfRayUntilIntersect","m_inv","maxChromaForLH","maxSafeChromaForL","refU","refV","refX","refY","refZ","rgbPrepare","root","toLinear","R","G","B","X","Y","Z","L","bottom","j","len1","len2","m1","m2","m3","ref","ref1","ref2","ret","sub1","sub2","top1","top2","push","line1","line2","point","theta","line","b1","lengths","apply","H","hrad","num","places","n","tuple","ch","results","lch","husl","huslp","rgbl","U","V","varU","varV","Hrad","S","charAt","substring","fromRGB","fromHex","toRGB","_conv","_round","_rgbPrepare","_getBounds","_maxChromaForLH","_maxSafeChromaForL","jQuery","requirejs","HUSL","cmyk","_husl","hwb","wh","bl","ratio","w","fromSpace","toSpace","addConvertor","lchab","fromSpaceName","toSpaceName","getConvertor","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","webpackPolyfill","deprecate","paths","children"],"mappings":"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EACA,IACA,GAEAC,UACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,aACA,IACA,EACA,KAEAC,gBACA,GACA,IACA,IAEAC,YACA,IACA,IACA,GAEAC,YACA,IACA,GACA,KAEAC,SACA,IACA,EACA,GAEAC,YACA,IACA,IACA,KAEAC,cACA,IACA,IACA,KAEAC,eACA,GACA,GACA,KAEAC,eACA,GACA,GACA,IAEAC,eACA,GACA,GACA,IAEAC,eACA,EACA,IACA,KAEAC,YACA,IACA,EACA,KAEAC,UACA,IACA,GACA,KAEAC,aACA,EACA,IACA,KAEAC,SACA,IACA,IACA,KAEAC,SACA,IACA,IACA,KAEAC,YACA,GACA,IACA,KAEAC,WACA,IACA,GACA,IAEAC,aACA,IACA,IACA,KAEAC,aACA,GACA,IACA,IAEAC,SACA,IACA,EACA,KAEAC,WACA,IACA,IACA,KAEAC,YACA,IACA,IACA,KAEAC,MACA,IACA,IACA,GAEAC,WACA,IACA,IACA,IAEAC,MACA,IACA,IACA,KAEAC,OACA,EACA,IACA,GAEAC,aACA,IACA,IACA,IAEAC,MACA,IACA,IACA,KAEAC,UACA,IACA,IACA,KAEAC,SACA,IACA,IACA,KAEAC,WACA,IACA,GACA,IAEAC,QACA,GACA,EACA,KAEAC,OACA,IACA,IACA,KAEAC,OACA,IACA,IACA,KAEAC,UACA,IACA,IACA,KAEAC,eACA,IACA,IACA,KAEAC,WACA,IACA,IACA,GAEAC,cACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,YACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,sBACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,YACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,aACA,IACA,IACA,KAEAC,eACA,GACA,IACA,KAEAC,cACA,IACA,IACA,KAEAC,gBACA,IACA,IACA,KAEAC,gBACA,IACA,IACA,KAEAC,gBACA,IACA,IACA,KAEAC,aACA,IACA,IACA,KAEAC,MACA,EACA,IACA,GAEAC,WACA,GACA,IACA,IAEAC,OACA,IACA,IACA,KAEAC,SACA,IACA,EACA,KAEAC,QACA,IACA,EACA,GAEAC,kBACA,IACA,IACA,KAEAC,YACA,EACA,EACA,KAEAC,cACA,IACA,GACA,KAEAC,cACA,IACA,IACA,KAEAC,gBACA,GACA,IACA,KAEAC,iBACA,IACA,IACA,KAEAC,mBACA,EACA,IACA,KAEAC,iBACA,GACA,IACA,KAEAC,iBACA,IACA,GACA,KAEAC,cACA,GACA,GACA,KAEAC,WACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,UACA,IACA,IACA,KAEAC,aACA,IACA,IACA,KAEAC,MACA,EACA,EACA,KAEAC,SACA,IACA,IACA,KAEAC,OACA,IACA,IACA,GAEAC,WACA,IACA,IACA,IAEAC,QACA,IACA,IACA,GAEAC,WACA,IACA,GACA,GAEAC,QACA,IACA,IACA,KAEAC,eACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,eACA,IACA,IACA,KAEAC,eACA,IACA,IACA,KAEAC,YACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,MACA,IACA,IACA,IAEAC,MACA,IACA,IACA,KAEAC,MACA,IACA,IACA,KAEAC,YACA,IACA,IACA,KAEAC,QACA,IACA,EACA,KAEAC,eACA,IACA,GACA,KAEAC,KACA,IACA,EACA,GAEAC,WACA,IACA,IACA,KAEAC,WACA,GACA,IACA,KAEAC,aACA,IACA,GACA,IAEAC,QACA,IACA,IACA,KAEAC,YACA,IACA,IACA,IAEAC,UACA,GACA,IACA,IAEAC,UACA,IACA,IACA,KAEAC,QACA,IACA,GACA,IAEAC,QACA,IACA,IACA,KAEAC,SACA,IACA,IACA,KAEAC,WACA,IACA,GACA,KAEAC,WACA,IACA,IACA,KAEAC,WACA,IACA,IACA,KAEAC,MACA,IACA,IACA,KAEAC,aACA,EACA,IACA,KAEAC,WACA,GACA,IACA,KAEAC,KACA,IACA,IACA,KAEAC,MACA,EACA,IACA,KAEAC,SACA,IACA,IACA,KAEAC,QACA,IACA,GACA,IAEAC,WACA,GACA,IACA,KAEAC,QACA,IACA,IACA,KAEAC,OACA,IACA,IACA,KAEAC,OACA,IACA,IACA,KAEAC,YACA,IACA,IACA,KAEAC,QACA,IACA,IACA,GAEAC,aACA,IACA,IACA,MlBslEM,SAAS7Z,EAAQD,EAASH,GmBzzFhCI,EAAAD,QAAA,WAA6B,SAAAqE,OAAA,oCnBg0FvB,SAASpE,EAAQD,EAASH,GoBh0FhCI,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAA8Z,kBACA9Z,EAAA+Z,UAAA,aACA/Z,EAAAga,SAEAha,EAAAia,YACAja,EAAA8Z,gBAAA,GAEA9Z","file":"bundle.js","sourcesContent":["var colorForge =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar colorSpace = __webpack_require__(13);\n\tvar cssColors = __webpack_require__(16);\n\n\n\n\t/**\n\tShorthand for creation of a new color object.\n\n\t@name ColorShorthand\n\t@function\n\n\t@param {Array} values - Values in the corresponding color space\n\t@param {number} [alpha = 1] - Alpha of the color\n\t*/\n\n\n\t/**\n\tColor instance\n\n\t@constructor\n\n\t@param {Array} values - Values in the corresponding color space\n\t@param {number} [alpha=1] - Alpha of the color\n\t@param {Color.spaces} [space='rgb'] - Space corresponding to the values\n\n\t@property {Array} values - Values in given color space\n\t@property {string} space - Current color space\n\t@property {number} alpha - Alpha of tho color\n\t@property {Color} originalColor - The color this was converted from (if\n\t\tapplicable)\n\t*/\n\tfunction Color(values, spaceAlpha, space) {\n\t\tthis.values = values;\n\t\tthis.alpha = 1;\n\t\tthis.space = 'rgb';\n\t\tthis.originalColor = null;\n\n\t\tif (space !== undefined) {\n\t\t\tthis.alpha = spaceAlpha;\n\t\t\tthis.space = space;\n\t\t} else if (spaceAlpha !== undefined) {\n\t\t\tif (typeof spaceAlpha === 'number') {\n\t\t\t\tthis.alpha = spaceAlpha;\n\t\t\t} else {\n\t\t\t\tthis.space = spaceAlpha;\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\tConvert to string representation. Gives valid CSS representation for rgb, hsl,\n\tand hsb. Includes alpha component if and only if the alpha is less than one.\n\t*/\n\tColor.prototype.toString = function toString() {\n\t\tvar functionSuffix = '';\n\t\tvar alphaText = '';\n\n\t\tif (this.alpha !== 1) {\n\t\t\tif (['rgb', 'hsl'].indexOf(this.space) !== -1) {\n\t\t\t\tfunctionSuffix = 'a';\n\t\t\t\talphaText = ', ' + this.alpha;\n\t\t\t} else {\n\t\t\t\talphaText = ', [alpha = ' + this.alpha + ']';\n\t\t\t}\n\t\t}\n\n\t\treturn this.space + functionSuffix + '(' + this.values.join(', ') + alphaText + ')';\n\t};\n\t/**\n\tConverts to hex representation. Includes alpha component if and only if the\n\talpha is less than one.\n\t*/\n\tColor.prototype.toHex = function toHex() {\n\t\tvar hex = '#' + this.convert('rgb').values.map(function asHex(raw) {\n\t\t\treturn hexDouble(Math.min(Math.round(raw), 255));\n\t\t}).join('');\n\n\t\tif (this.alpha >= 1) {\n\t\t\treturn hex;\n\t\t} else {\n\t\t\treturn hex + hexDouble(Math.round(this.alpha * 255));\n\t\t}\n\t};\n\t/**\n\tCreates an exact copy of the current color.\n\t*/\n\tColor.prototype.clone = function clone() {\n\t\tvar self = new Color(this.values.slice(), this.alpha, this.space);\n\n\t\tif (this.originalColor) {\n\t\t\tself.originalColor = this.originalColor.clone();\n\t\t}\n\n\t\treturn self;\n\t};\n\t/**\n\tFinds the nearest CSS4 color name within a given tolerance.\n\n\t@param {number} [tolerance=0] - The maximum distance between the current color\n\t\tand the css color, with distance being calculated as the the sum of the\n\t\tabsolute differences between each RGB channel.\n\t*/\n\tColor.prototype.toCss = function toCss(tolerance) {\n\t\ttolerance = tolerance || 0;\n\t\tvar selfRgb = this.convert('rgb').values;\n\n\t\treturn Object.keys(cssColors).map(function(name) {\n\t\t\treturn {\n\t\t\t\tname: name,\n\t\t\t\tdistance: distanceTo(name)\n\t\t\t};\n\t\t}).filter(function(value) {\n\t\t\treturn value.distance <= tolerance;\n\t\t}).reduce(function(out, value) {\n\t\t\tif (value.distance < out.distance) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}, {\n\t\t\tname: null, // Return value if no values after filter\n\t\t\tdistance: Infinity\n\t\t}).name;\n\n\t\tfunction distanceTo(name) {\n\t\t\treturn zipValues(cssColors[name], selfRgb).reduce(function(out, zip) {\n\t\t\t\treturn out + Math.abs(zip[0] - zip[1]);\n\t\t\t}, 0);\n\t\t}\n\t};\n\t/**\n\tFinds the nearest CSS4 color name. Identical to `#toCss(255)`.\n\t*/\n\tColor.prototype.toClosestCss = function toClosestCss() {\n\t\treturn this.toCss(255);\n\t};\n\t/**\n\tReturns a new color in the given space. The new color will have the\n\t`originalColor` property set, meaning subsequent conversions will be less\n\tlossy.\n\n\t@param {Color.spaces} space - The space in which to convert the color to\n\t*/\n\tColor.prototype.convert = function convert(space) {\n\t\tif (Color.spaces[space]) {\n\t\t\tif (this.space === space) {\n\t\t\t\treturn this.clone();\n\t\t\t} else if (this.originalColor) {\n\t\t\t\treturn this.originalColor.convert(space);\n\t\t\t} else {\n\t\t\t\tvar newValues = colorSpace[this.space][space](this.values);\n\n\t\t\t\tvar newColor = new Color(newValues, this.alpha, space);\n\t\t\t\tnewColor.originalColor = this.clone();\n\n\t\t\t\treturn newColor;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Invalid color space: ' + space);\n\t\t}\n\t};\n\t/*\n\tReturns a new color that is the result of mixing the current color with another\n\tcolor.\n\n\t@param {Color} other - The color\n\t@param {number} [amount=0.5] - The ratio of the color mix, with 0 being equal\n\t\tto the current color, and 1 being equal to the other color\n\t@param {Color.spaces} [mode='rgb'] - The space in which to perform the mix,\n\t\twith different spaces giving different outputs\n\t*/\n\tColor.prototype.mix = function mix(other, amountMode, mode) {\n\t\tvar amount;\n\n\t\tif (mode === undefined) {\n\t\t\tif (typeof amountMode === 'number') {\n\t\t\t\tamount = amountMode;\n\t\t\t} else if (typeof amountMode === 'string') {\n\t\t\t\tmode = amountMode;\n\t\t\t}\n\t\t} else {\n\t\t\tamount = amountMode;\n\t\t}\n\n\t\tif (amount === undefined) {\n\t\t\tamount = 0.5;\n\t\t}\n\n\t\tif (mode === undefined) {\n\t\t\tmode = 'rgb';\n\t\t}\n\n\t\tvar thisValues = this.convert(mode).values;\n\t\tvar otherValues = other.convert(mode).values;\n\n\t\tvar colorMode = colorSpace[mode];\n\n\t\tvar values = zipValues(thisValues, otherValues).map(function zippedValues(zip, index) {\n\t\t\tvar a = zip[0];\n\t\t\tvar b = zip[1];\n\n\t\t\tif (colorMode.channel[index] === 'hue') {\n\t\t\t\tvar value;\n\n\t\t\t\tif (Math.abs(a - b) <= 180) {\n\t\t\t\t\t// Clockwise (I guess?)\n\t\t\t\t\tvalue = a * (1 - amount) + b * amount;\n\t\t\t\t} else {\n\t\t\t\t\t// Anti-clockwise\n\t\t\t\t\tvalue = a * (1 - amount) - b * amount;\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn value + 360;\n\t\t\t\t} else if (value >= 360) {\n\t\t\t\t\treturn value - 360;\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn a * (1 - amount) + b * amount;\n\t\t\t}\n\t\t}).map(function(value, index) {\n\t\t\t// Clip values\n\t\t\tvar max = colorMode.max[index];\n\t\t\tvar min = colorMode.min[index];\n\n\t\t\treturn Math.min(max, Math.max(min, value));\n\t\t});\n\t\tvar alpha = this.alpha + (this.alpha - other.alpha) * amount;\n\n\t\treturn new Color(values, alpha, mode);\n\t};\n\t/**\n\tReturns a new color that is the result of lightening the current color.\n\n\t@param {number} [amount=0.1] - The amount to lighten by, between 0 and 1\n\t@param {Color.spaces} [mode='hsl'] - The space to use to lighten, which must\n\t\thave a lightness component\n\t*/\n\tColor.prototype.lighten = function lighten(amount, mode) {\n\t\tif (amount === undefined) {\n\t\t\tamount = 0.1;\n\t\t}\n\n\t\tif (mode === undefined) {\n\t\t\tmode = 'hsl';\n\t\t}\n\n\t\tvar colorMode = colorSpace[mode];\n\t\tvar index = colorMode.channel.indexOf('lightness');\n\n\t\tif (index !== -1) {\n\t\t\tvar newColor = this.convert(mode);\n\n\t\t\tvar min = colorMode.min[index];\n\t\t\tvar max = colorMode.max[index];\n\n\t\t\tvar brightness = newColor.values[index] + amount * (max - min);\n\t\t\t// Clip brightness to bounds\n\t\t\tnewColor.values[index] = Math.min(max, Math.max(min, brightness));\n\n\t\t\t// This will be wrong\n\t\t\tnewColor.originalColor = null;\n\n\t\t\treturn newColor.convert(this.space);\n\t\t} else {\n\t\t\tthrow new Error('Cannot lighten or darken with mode ' + mode);\n\t\t}\n\t};\n\t/**\n\tReturns a new color that is the result of darkening the current color.\n\n\t@param {number} [amount=0.1] - The amount to lighten by, between 0 and 1\n\t@param {Color.spaces} [mode='hsl'] - The space to use to lighten, which must\n\t\thave a lightness component\n\t*/\n\tColor.prototype.darken = function darken(amount, mode) {\n\t\tif (amount === undefined) {\n\t\t\tamount = 0.1; // Otherwise will be NaN in #lighten\n\t\t}\n\n\t\treturn this.lighten(-amount, mode);\n\t};\n\t/**\n\tMultiplies each RGB value by the specified amount. The alpha value remains\n\tunchanged.\n\n\t@param {number} value - The value to multiply each by\n\t*/\n\tColor.prototype.channelMultiply = function channelMultiply(value) {\n\t\tvar values = this.convert('rgb').values.map(function(channel) {\n\t\t\treturn Math.min(channel * value, 255);\n\t\t});\n\n\t\treturn new Color(values, this.alpha, 'rgb');\n\t};\n\t/**\n\tReturns a new color that is the result of adding the channels of the current\n\tcolor and another color. The resulting color has channels clipped at a maximum\n\tof 255, and an alpha equal to the square root of the sum of the squares of the\n\talpha values clipped at one.\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.add = colorOperationFactory(function add(zip) {\n\t\treturn Math.min(zip[0] + zip[1], 255);\n\t}, addSubtractAlphaFn);\n\t/**\n\tReturns a new color that is the result of subtracting the channels of the\n\tcurrent color and another color. The resulting color has channels clipped at a\n\tminimum of 0, and an alpha equal to the square root of the sum of the squares\n\tof the alpha values clipped at one.\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.subtract = colorOperationFactory(function subtract(zip) {\n\t\treturn Math.max(zip[0] - zip[1], 0);\n\t}, addSubtractAlphaFn);\n\t/**\n\tReturns a new color that is the result of multiplying the channels of the\n\tcurrent color and another color.\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.multiply = colorOperationFactory(function multiply(zip) {\n\t\treturn zip[0] * zip[1] / 255;\n\t});\n\t/**\n\tReturns a new color that is the result of dividing the channels of the current\n\tcolor by the channels of another color. The resulting color has channels\n\tclipped at a maximum of 255.\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.divide = colorOperationFactory(function divide(zip) {\n\t\treturn Math.min(255 * zip[0] / zip[1], 255);\n\t});\n\t/**\n\tReturns a new color that is the result of the screen operation of the current\n\tcolor and another color. The equation used is 1 - (1 - a)(1 - b).\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.screen = colorOperationFactory(function screen(zip) {\n\t\treturn 255 - (255 - zip[0]) * (255 - zip[1]) / 255;\n\t});\n\t/**\n\tReturns a new color that is the result of the overlay operation of the current\n\tcolor and another color. The equation used is given as follows:\n\n\t\ta < 0.5    2ab\n\t\ta >= 0.5   1 - 2(1 - a)(1 - b).\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.overlay = colorOperationFactory(function overlay(zip) {\n\t\tif (zip[0] < 128) {\n\t\t\treturn 2 * zip[0] * zip[1] / 255;\n\t\t} else {\n\t\t\treturn 255 - 2 * (255 - zip[0]) * (255 - zip[1]) / 255;\n\t\t}\n\t});\n\t/**\n\tReturns a new color that is the result of the dodge operation of the current\n\tcolor and another color. The equation used is given as follows:\n\n\t\tb < 1    b / (1 - a)\n\t\tb = 1    1\n\n\tThe resulting color has channels clipped at a maximum of 255.\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.dodge = colorOperationFactory(function dodge(zip) {\n\t\tif (zip[0] < 255) {\n\t\t\treturn Math.min(255, (zip[1] * 255) / (255 - zip[0]));\n\t\t} else {\n\t\t\treturn 255;\n\t\t}\n\t});\n\t/**\n\tReturns a new color that is the result of the dodge operation of the current\n\tcolor and another color. The equation used is given as follows:\n\n\t\ta > 0    1 - (1 - b) / a\n\t\ta = 0    0\n\n\tThe resulting color has channels clipped at a maximum of 255.\n\n\t@function\n\n\t@param {Color} other - The other color used to perform the operation\n\t*/\n\tColor.prototype.burn = colorOperationFactory(function burn(zip) {\n\t\tif (zip[0] >= 0) {\n\t\t\treturn Math.max(0, 255 - 255 * (255 - zip[1]) / zip[0]);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t});\n\t/**\n\tReturns a new color that is the result of raising each power to an exponent.\n\tThe resulting color has channels clipped at a maximum of 255.\n\n\t@function\n\n\t@param {number} power - The power to raise each channel by\n\t*/\n\tColor.prototype.exponent = function exponent(power) {\n\t\tvar values = this.convert('rgb').values.map(function(value) {\n\t\t\treturn Math.min(Math.pow(value / 255, power), 1) * 255;\n\t\t});\n\t\tvar alpha = Math.pow(this.alpha, power);\n\n\t\treturn new Color(values, alpha, 'rgb');\n\t};\n\n\n\n\t/**\n\tAvailable spaces for colors. Check`color-space` to ensure up-to-dateness. Note\n\tthat all these values exist on the Color object as a shorthand described in\n\t{@link ColorShorthand}.\n\n\t@readonly\n\t@enum\n\n\t@property {string} ciecam\n\t@property {string} cmy\n\t@property {string} cmyk\n\t@property {string} hsl\n\t@property {string} hsv\n\t@property {string} husl\n\t@property {string} huslp\n\t@property {string} hwb\n\t@property {string} lab\n\t@property {string} labh\n\t@property {string} lchab\n\t@property {string} lchuv\n\t@property {string} lms\n\t@property {string} luv\n\t@property {string} rgb\n\t@property {string} xyy\n\t@property {string} xyz\n\t*/\n\tColor.spaces = Object.freeze(Object.keys(colorSpace).reduce(function(out, name) {\n\t\tout[name] = name;\n\t\treturn out;\n\t}, {}));\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} ciecam\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} cmyk\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} cmy\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} rgb\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} hsl\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} hsv\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} husl\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} huslp\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} hwb\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} lab\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} labh\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} lchab\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} lchuv\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} lms\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} luv\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} rgb\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} xyy\n\t*/\n\t/**\n\t@memberof Color\n\t@member {ColorShorthand} xyz\n\t*/\n\t// Shorthand instantiation\n\tObject.keys(Color.spaces).forEach(function(space) {\n\t\tColor[space] = function(values, alpha) {\n\t\t\tif (alpha !== undefined) {\n\t\t\t\treturn new Color(values, alpha, space);\n\t\t\t} else {\n\t\t\t\treturn new Color(values, space);\n\t\t\t}\n\t\t};\n\t});\n\t/**\n\tShorthand for creation of a new color object using a hex value.\n\n\t@param {string} hex - A hex value with either 3, 4, 6, or 8 numbers, which can\n\t\toptionally be prefixed with a hash (#)\n\t*/\n\tColor.hex = function hex(string) {\n\t\tif (string[0] === '#') {\n\t\t\tstring = string.substr(1);\n\t\t}\n\n\t\tvar len = string.length;\n\t\tvar hasAlphaComponent = (len % 3 !== 0);\n\n\t\tif (!hasAlphaComponent && (len === 6 || len === 3)) {\n\t\t\tvar rgb = (function(string) {\n\n\t\t\t\tif (len === 3) {\n\t\t\t\t\treturn [string[0] + string[0], string[1] + string[1], string[2] + string[2]];\n\t\t\t\t} else if (len === 6) {\n\t\t\t\t\treturn [string.substr(0, 2), string.substr(2, 2), string.substr(4, 2)];\n\t\t\t\t}\n\t\t\t})(string).map(function(channelString) {\n\t\t\t\treturn parseInt(channelString, 16);\n\t\t\t});\n\n\t\t\treturn new Color(rgb, 'rgb');\n\t\t} else if (hasAlphaComponent && (len === 8 || len === 4)) {\n\t\t\tvar offset = len / 4;\n\t\t\tvar alphaMultiplicationFactor = (len === 4) ? 17 : 1;\n\n\t\t\tvar alpha = parseInt(string.substr(-offset), 16) * alphaMultiplicationFactor / 255;\n\t\t\tvar newColor = Color.hex(string.substr(0, len - offset));\n\t\t\tnewColor.alpha = alpha;\n\n\t\t\treturn newColor;\n\t\t} else {\n\t\t\tthrow new Error('Cannot convert from hex value ' + string);\n\t\t}\n\t};\n\t/**\n\tShorthand for creation of a new color object with a CSS4 color name.\n\n\t@param {string} name - CSS4 color name\n\t@param {number} [alpha = 1] - Alpha of the color\n\t*/\n\tColor.css = function css(string, alpha) {\n\t\tvar rgb = cssColors[string];\n\n\t\tif (alpha === undefined) {\n\t\t\talpha = 1;\n\t\t}\n\n\t\tif (rgb) {\n\t\t\treturn new Color(rgb, alpha);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\n\tfunction colorOperationFactory(operation, alphaFn) {\n\t\treturn function(other) {\n\t\t\tvar a = this.convert('rgb');\n\t\t\tvar b = other.convert('rgb');\n\n\t\t\tif (!alphaFn) {\n\t\t\t\talphaFn = function defaultAlphaFn(a, b) {\n\t\t\t\t\treturn operation([a * 255, b * 255]) / 255;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar aValues = a.values.map(function(value) {\n\t\t\t\treturn value * a.alpha;\n\t\t\t});\n\t\t\tvar bValues = b.values.map(function(value) {\n\t\t\t\treturn value * b.alpha;\n\t\t\t});\n\n\t\t\tvar values = zipValues(aValues, bValues).map(operation);\n\t\t\tvar alpha = alphaFn(a.alpha, b.alpha);\n\n\t\t\treturn new Color(values, alpha, 'rgb');\n\t\t};\n\t}\n\n\tfunction zipValues(a, b) {\n\t\tvar out = [];\n\n\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\tout[i] = [a[i], b[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction hexDouble(value) {\n\t\tvar hex = value.toString(16);\n\n\t\tif (hex.length >= 2) {\n\t\t\treturn hex.substr(0, 2);\n\t\t} else {\n\t\t\treturn '0' + hex;\n\t\t}\n\t}\n\n\tfunction addSubtractAlphaFn(a, b) {\n\t\treturn Math.min(Math.sqrt(a * a + b * b), 1);\n\t}\n\n\n\n\tmodule.exports = Color;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CIE XYZ\n\t *\n\t * @module  color-space/xyz\n\t */\n\n\tvar rgb = __webpack_require__(2);\n\n\tvar xyz = module.exports = {\n\t\tname: 'xyz',\n\t\tmin: [0,0,0],\n\t\tmax: [96,100,109],\n\t\tchannel: ['lightness','u','v'],\n\t\talias: ['ciexyz'],\n\n\t\t//whitepoint with observer/illuminant\n\t\t// http://en.wikipedia.org/wiki/Standard_illuminant\n\t\twhitepoint: {\n\t\t\t2: {\n\t\t\t\t//incadescent\n\t\t\t\tA:[109.85, 100, 35.585],\n\t\t\t\t// B:[],\n\t\t\t\tC: [98.074, 100, 118.232],\n\t\t\t\tD50: [96.422, 100, 82.521],\n\t\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t\t//daylight\n\t\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t\t//flourescent\n\t\t\t\t// F1: [],\n\t\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t\t// F3: [],\n\t\t\t\t// F4: [],\n\t\t\t\t// F5: [],\n\t\t\t\t// F6:[],\n\t\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t\t// F8: [],\n\t\t\t\t// F9: [],\n\t\t\t\t// F10: [],\n\t\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t\t// F12: [],\n\t\t\t\tE: [100,100,100]\n\t\t\t},\n\n\t\t\t10: {\n\t\t\t\t//incadescent\n\t\t\t\tA:[111.144, 100, 35.200],\n\t\t\t\tC: [97.285, 100, 116.145],\n\t\t\t\tD50: [96.720, 100, 81.427],\n\t\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t\t//daylight\n\t\t\t\tD65: [94.811, 100, 107.304],\n\t\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t\t//flourescent\n\t\t\t\tF2: [103.280, 100, 69.026],\n\t\t\t\tF7: [95.792, 100, 107.687],\n\t\t\t\tF11: [103.866, 100, 65.627],\n\t\t\t\tE: [100,100,100]\n\t\t\t}\n\t\t},\n\n\t\trgb: function(xyz) {\n\t\t\tvar x = xyz[0] / 100,\n\t\t\t\t\ty = xyz[1] / 100,\n\t\t\t\t\tz = xyz[2] / 100,\n\t\t\t\t\tr, g, b;\n\n\t\t\t// assume sRGB\n\t\t\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\t\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\t\t\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\t\t\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\t\t\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t\t\t: r = (r * 12.92);\n\n\t\t\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t\t\t: g = (g * 12.92);\n\n\t\t\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t\t\t: b = (b * 12.92);\n\n\t\t\tr = Math.min(Math.max(0, r), 1);\n\t\t\tg = Math.min(Math.max(0, g), 1);\n\t\t\tb = Math.min(Math.max(0, b), 1);\n\n\t\t\treturn [r * 255, g * 255, b * 255];\n\t\t}\n\t};\n\n\n\t//extend rgb\n\trgb.xyz = function(rgb) {\n\t\tvar r = rgb[0] / 255,\n\t\t\t\tg = rgb[1] / 255,\n\t\t\t\tb = rgb[2] / 255;\n\n\t\t// assume sRGB\n\t\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\t\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\t\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\t\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\t\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\t\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\t\treturn [x * 100, y *100, z * 100];\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * RGB space.\n\t *\n\t * @module  color-space/rgb\n\t */\n\n\tmodule.exports = {\n\t\tname: 'rgb',\n\t\tmin: [0,0,0],\n\t\tmax: [255,255,255],\n\t\tchannel: ['red', 'green', 'blue']\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module color-space/hsl\n\t */\n\n\tvar rgb = __webpack_require__(2);\n\n\tmodule.exports = {\n\t\tname: 'hsl',\n\t\tmin: [0,0,0],\n\t\tmax: [360,100,100],\n\t\tchannel: ['hue', 'saturation', 'lightness'],\n\n\t\trgb: function(hsl) {\n\t\t\tvar h = hsl[0] / 360,\n\t\t\t\t\ts = hsl[1] / 100,\n\t\t\t\t\tl = hsl[2] / 100,\n\t\t\t\t\tt1, t2, t3, rgb, val;\n\n\t\t\tif (s === 0) {\n\t\t\t\tval = l * 255;\n\t\t\t\treturn [val, val, val];\n\t\t\t}\n\n\t\t\tif (l < 0.5) {\n\t\t\t\tt2 = l * (1 + s);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tt2 = l + s - l * s;\n\t\t\t}\n\t\t\tt1 = 2 * l - t2;\n\n\t\t\trgb = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\t\tif (t3 < 0) {\n\t\t\t\t\tt3++;\n\t\t\t\t}\n\t\t\t\telse if (t3 > 1) {\n\t\t\t\t\tt3--;\n\t\t\t\t}\n\n\t\t\t\tif (6 * t3 < 1) {\n\t\t\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t\t\t}\n\t\t\t\telse if (2 * t3 < 1) {\n\t\t\t\t\tval = t2;\n\t\t\t\t}\n\t\t\t\telse if (3 * t3 < 2) {\n\t\t\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tval = t1;\n\t\t\t\t}\n\n\t\t\t\trgb[i] = val * 255;\n\t\t\t}\n\n\t\t\treturn rgb;\n\t\t}\n\t};\n\n\n\t//extend rgb\n\trgb.hsl = function(rgb) {\n\t\tvar r = rgb[0]/255,\n\t\t\t\tg = rgb[1]/255,\n\t\t\t\tb = rgb[2]/255,\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tmax = Math.max(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th, s, l;\n\n\t\tif (max === min) {\n\t\t\th = 0;\n\t\t}\n\t\telse if (r === max) {\n\t\t\th = (g - b) / delta;\n\t\t}\n\t\telse if (g === max) {\n\t\t\th = 2 + (b - r) / delta;\n\t\t}\n\t\telse if (b === max) {\n\t\t\th = 4 + (r - g)/ delta;\n\t\t}\n\n\t\th = Math.min(h * 60, 360);\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\tl = (min + max) / 2;\n\n\t\tif (max === min) {\n\t\t\ts = 0;\n\t\t}\n\t\telse if (l <= 0.5) {\n\t\t\ts = delta / (max + min);\n\t\t}\n\t\telse {\n\t\t\ts = delta / (2 - max - min);\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Cylindrical CIE LUV\n\t *\n\t * @module color-space/lchuv\n\t */\n\n\tvar luv = __webpack_require__(7);\n\tvar xyz = __webpack_require__(1);\n\n\t//cylindrical luv\n\tvar lchuv = module.exports = {\n\t\tname: 'lchuv',\n\t\tchannel: ['lightness', 'chroma', 'hue'],\n\t\talias: ['cielchuv'],\n\t\tmin: [0,0,0],\n\t\tmax: [100,100,360],\n\n\t\tluv: function(luv){\n\t\t\tvar l = luv[0],\n\t\t\tc = luv[1],\n\t\t\th = luv[2],\n\t\t\tu, v, hr;\n\n\t\t\thr = h / 360 * 2 * Math.PI;\n\t\t\tu = c * Math.cos(hr);\n\t\t\tv = c * Math.sin(hr);\n\t\t\treturn [l, u, v];\n\t\t},\n\n\t\txyz: function(arg) {\n\t\t\treturn luv.xyz(lchuv.luv(arg));\n\t\t},\n\t};\n\n\tluv.lchuv = function(luv){\n\t\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\t\tvar c = Math.sqrt(u*u + v*v);\n\t\tvar hr = Math.atan2(v,u);\n\t\tvar h = hr * 360 / 2 / Math.PI;\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\treturn [l,c,h]\n\t};\n\n\txyz.lchuv = function(arg){\n\t  return luv.lchuv(xyz.luv(arg));\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module color-space/hsv\n\t */\n\n\tvar rgb = __webpack_require__(2);\n\tvar hsl = __webpack_require__(3);\n\n\tmodule.exports = {\n\t\tname: 'hsv',\n\t\tmin: [0,0,0],\n\t\tmax: [360,100,100],\n\t\tchannel: ['hue', 'saturation', 'value'],\n\t\talias: ['hsb'],\n\n\t\trgb: function(hsv) {\n\t\t\tvar h = hsv[0] / 60,\n\t\t\t\t\ts = hsv[1] / 100,\n\t\t\t\t\tv = hsv[2] / 100,\n\t\t\t\t\thi = Math.floor(h) % 6;\n\n\t\t\tvar f = h - Math.floor(h),\n\t\t\t\t\tp = 255 * v * (1 - s),\n\t\t\t\t\tq = 255 * v * (1 - (s * f)),\n\t\t\t\t\tt = 255 * v * (1 - (s * (1 - f)));\n\t\t\tv *= 255;\n\n\t\t\tswitch(hi) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn [v, t, p];\n\t\t\t\tcase 1:\n\t\t\t\t\treturn [q, v, p];\n\t\t\t\tcase 2:\n\t\t\t\t\treturn [p, v, t];\n\t\t\t\tcase 3:\n\t\t\t\t\treturn [p, q, v];\n\t\t\t\tcase 4:\n\t\t\t\t\treturn [t, p, v];\n\t\t\t\tcase 5:\n\t\t\t\t\treturn [v, p, q];\n\t\t\t}\n\t\t},\n\n\t\thsl: function(hsv) {\n\t\t\tvar h = hsv[0],\n\t\t\t\ts = hsv[1] / 100,\n\t\t\t\tv = hsv[2] / 100,\n\t\t\t\tsl, l;\n\n\t\t\tl = (2 - s) * v;\n\t\t\tsl = s * v;\n\t\t\tsl /= (l <= 1) ? l : 2 - l;\n\t\t\tsl = sl || 0;\n\t\t\tl /= 2;\n\n\t\t\treturn [h, sl * 100, l * 100];\n\t\t}\n\t};\n\n\n\t//append rgb\n\trgb.hsv = function(rgb) {\n\t\tvar r = rgb[0],\n\t\t\t\tg = rgb[1],\n\t\t\t\tb = rgb[2],\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tmax = Math.max(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th, s, v;\n\n\t\tif (max === 0) {\n\t\t\ts = 0;\n\t\t}\n\t\telse {\n\t\t\ts = (delta/max * 1000)/10;\n\t\t}\n\n\t\tif (max === min) {\n\t\t\th = 0;\n\t\t}\n\t\telse if (r === max) {\n\t\t\th = (g - b) / delta;\n\t\t}\n\t\telse if (g === max) {\n\t\t\th = 2 + (b - r) / delta;\n\t\t}\n\t\telse if (b === max) {\n\t\t\th = 4 + (r - g) / delta;\n\t\t}\n\n\t\th = Math.min(h * 60, 360);\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\tv = ((max / 255) * 1000) / 10;\n\n\t\treturn [h, s, v];\n\t};\n\n\n\n\t//extend hsl\n\thsl.hsv = function(hsl) {\n\t\tvar h = hsl[0],\n\t\t\t\ts = hsl[1] / 100,\n\t\t\t\tl = hsl[2] / 100,\n\t\t\t\tsv, v;\n\t\tl *= 2;\n\t\ts *= (l <= 1) ? l : 2 - l;\n\t\tv = (l + s) / 2;\n\t\tsv = (2 * s) / (l + s) || 0;\n\n\t\treturn [h, sv * 100, v * 100];\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CIE LAB space model\n\t *\n\t * @module color-space/lab\n\t */\n\n\tvar xyz = __webpack_require__(1);\n\n\tmodule.exports = {\n\t\tname: 'lab',\n\t\tmin: [0,-100,-100],\n\t\tmax: [100,100,100],\n\t\tchannel: ['lightness', 'a', 'b'],\n\t\talias: ['cielab'],\n\n\t\txyz: function(lab) {\n\t\t\tvar l = lab[0],\n\t\t\t\t\ta = lab[1],\n\t\t\t\t\tb = lab[2],\n\t\t\t\t\tx, y, z, y2;\n\n\t\t\tif (l <= 8) {\n\t\t\t\ty = (l * 100) / 903.3;\n\t\t\t\ty2 = (7.787 * (y / 100)) + (16 / 116);\n\t\t\t} else {\n\t\t\t\ty = 100 * Math.pow((l + 16) / 116, 3);\n\t\t\t\ty2 = Math.pow(y / 100, 1/3);\n\t\t\t}\n\n\t\t\tx = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n\t\t\tz = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n\t\t\treturn [x, y, z];\n\t\t}\n\t};\n\n\n\t//extend xyz\n\txyz.lab = function(xyz){\n\t\tvar x = xyz[0],\n\t\t\t\ty = xyz[1],\n\t\t\t\tz = xyz[2],\n\t\t\t\tl, a, b;\n\n\t\tx /= 95.047;\n\t\ty /= 100;\n\t\tz /= 108.883;\n\n\t\tx = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t\ty = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t\tz = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n\t\tl = (116 * y) - 16;\n\t\ta = 500 * (x - y);\n\t\tb = 200 * (y - z);\n\n\t\treturn [l, a, b];\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CIE LUV (C'est la vie)\n\t *\n\t * @module color-space/luv\n\t */\n\n\tvar xyz = __webpack_require__(1);\n\n\tmodule.exports = {\n\t\tname: 'luv',\n\t\t//NOTE: luv has no rigidly defined limits\n\t\t//easyrgb fails to get proper coords\n\t\t//boronine states no rigid limits\n\t\t//colorMine refers this ones:\n\t\tmin: [0,-134,-140],\n\t\tmax: [100,224,122],\n\t\tchannel: ['lightness', 'u', 'v'],\n\t\talias: ['cieluv'],\n\n\t\txyz: function(arg, i, o){\n\t\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\t\tif (l === 0) return [0,0,0];\n\n\t\t\t//get constants\n\t\t\tvar e = 0.008856451679035631; //(6/29)^3\n\t\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t\t//get illuminant/observer\n\t\t\ti = i || 'D65';\n\t\t\to = o || 2;\n\n\t\t\txn = xyz.whitepoint[o][i][0];\n\t\t\tyn = xyz.whitepoint[o][i][1];\n\t\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t\t// un = 0.19783000664283;\n\t\t\t// vn = 0.46831999493879;\n\n\n\t\t\t_u = u / (13 * l) + un || 0;\n\t\t\t_v = v / (13 * l) + vn || 0;\n\n\t\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t\t//wikipedia method\n\t\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t\t//boronine method\n\t\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\t\treturn [x, y, z];\n\t\t}\n\t};\n\n\t// http://www.brucelindbloom.com/index.html?Equations.html\n\t// https://github.com/boronine/husl/blob/master/husl.coffee\n\t//i - illuminant\n\t//o - observer\n\txyz.luv = function(arg, i, o) {\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t\t//get constants\n\t\tvar e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 903.2962962962961; //(29/3)^3\n\n\t\t//get illuminant/observer coords\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\t\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\t\tvar yr = y/yn;\n\n\t\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\t\tu = 13 * l * (_u - un);\n\t\tv = 13 * l * (_v - vn);\n\n\t\treturn [l, u, v];\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// Generated by CoffeeScript 1.9.1\n\t(function() {\n\t  var L_to_Y, Y_to_L, conv, distanceFromPole, dotProduct, epsilon, fromLinear, getBounds, intersectLineLine, kappa, lengthOfRayUntilIntersect, m, m_inv, maxChromaForLH, maxSafeChromaForL, refU, refV, refX, refY, refZ, rgbPrepare, root, round, toLinear;\n\n\t  m = {\n\t    R: [3.240969941904521, -1.537383177570093, -0.498610760293],\n\t    G: [-0.96924363628087, 1.87596750150772, 0.041555057407175],\n\t    B: [0.055630079696993, -0.20397695888897, 1.056971514242878]\n\t  };\n\n\t  m_inv = {\n\t    X: [0.41239079926595, 0.35758433938387, 0.18048078840183],\n\t    Y: [0.21263900587151, 0.71516867876775, 0.072192315360733],\n\t    Z: [0.019330818715591, 0.11919477979462, 0.95053215224966]\n\t  };\n\n\t  refX = 0.95045592705167;\n\n\t  refY = 1.0;\n\n\t  refZ = 1.089057750759878;\n\n\t  refU = 0.19783000664283;\n\n\t  refV = 0.46831999493879;\n\n\t  kappa = 903.2962962;\n\n\t  epsilon = 0.0088564516;\n\n\t  getBounds = function(L) {\n\t    var bottom, channel, j, k, len1, len2, m1, m2, m3, ref, ref1, ref2, ret, sub1, sub2, t, top1, top2;\n\t    sub1 = Math.pow(L + 16, 3) / 1560896;\n\t    sub2 = sub1 > epsilon ? sub1 : L / kappa;\n\t    ret = [];\n\t    ref = ['R', 'G', 'B'];\n\t    for (j = 0, len1 = ref.length; j < len1; j++) {\n\t      channel = ref[j];\n\t      ref1 = m[channel], m1 = ref1[0], m2 = ref1[1], m3 = ref1[2];\n\t      ref2 = [0, 1];\n\t      for (k = 0, len2 = ref2.length; k < len2; k++) {\n\t        t = ref2[k];\n\t        top1 = (284517 * m1 - 94839 * m3) * sub2;\n\t        top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n\t        bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n\t        ret.push([top1 / bottom, top2 / bottom]);\n\t      }\n\t    }\n\t    return ret;\n\t  };\n\n\t  intersectLineLine = function(line1, line2) {\n\t    return (line1[1] - line2[1]) / (line2[0] - line1[0]);\n\t  };\n\n\t  distanceFromPole = function(point) {\n\t    return Math.sqrt(Math.pow(point[0], 2) + Math.pow(point[1], 2));\n\t  };\n\n\t  lengthOfRayUntilIntersect = function(theta, line) {\n\t    var b1, len, m1;\n\t    m1 = line[0], b1 = line[1];\n\t    len = b1 / (Math.sin(theta) - m1 * Math.cos(theta));\n\t    if (len < 0) {\n\t      return null;\n\t    }\n\t    return len;\n\t  };\n\n\t  maxSafeChromaForL = function(L) {\n\t    var b1, j, len1, lengths, m1, ref, ref1, x;\n\t    lengths = [];\n\t    ref = getBounds(L);\n\t    for (j = 0, len1 = ref.length; j < len1; j++) {\n\t      ref1 = ref[j], m1 = ref1[0], b1 = ref1[1];\n\t      x = intersectLineLine([m1, b1], [-1 / m1, 0]);\n\t      lengths.push(distanceFromPole([x, b1 + x * m1]));\n\t    }\n\t    return Math.min.apply(Math, lengths);\n\t  };\n\n\t  maxChromaForLH = function(L, H) {\n\t    var hrad, j, l, len1, lengths, line, ref;\n\t    hrad = H / 360 * Math.PI * 2;\n\t    lengths = [];\n\t    ref = getBounds(L);\n\t    for (j = 0, len1 = ref.length; j < len1; j++) {\n\t      line = ref[j];\n\t      l = lengthOfRayUntilIntersect(hrad, line);\n\t      if (l !== null) {\n\t        lengths.push(l);\n\t      }\n\t    }\n\t    return Math.min.apply(Math, lengths);\n\t  };\n\n\t  dotProduct = function(a, b) {\n\t    var i, j, ref, ret;\n\t    ret = 0;\n\t    for (i = j = 0, ref = a.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n\t      ret += a[i] * b[i];\n\t    }\n\t    return ret;\n\t  };\n\n\t  round = function(num, places) {\n\t    var n;\n\t    n = Math.pow(10, places);\n\t    return Math.round(num * n) / n;\n\t  };\n\n\t  fromLinear = function(c) {\n\t    if (c <= 0.0031308) {\n\t      return 12.92 * c;\n\t    } else {\n\t      return 1.055 * Math.pow(c, 1 / 2.4) - 0.055;\n\t    }\n\t  };\n\n\t  toLinear = function(c) {\n\t    var a;\n\t    a = 0.055;\n\t    if (c > 0.04045) {\n\t      return Math.pow((c + a) / (1 + a), 2.4);\n\t    } else {\n\t      return c / 12.92;\n\t    }\n\t  };\n\n\t  rgbPrepare = function(tuple) {\n\t    var ch, j, k, len1, len2, n, results;\n\t    tuple = (function() {\n\t      var j, len1, results;\n\t      results = [];\n\t      for (j = 0, len1 = tuple.length; j < len1; j++) {\n\t        n = tuple[j];\n\t        results.push(round(n, 3));\n\t      }\n\t      return results;\n\t    })();\n\t    for (j = 0, len1 = tuple.length; j < len1; j++) {\n\t      ch = tuple[j];\n\t      if (ch < -0.0001 || ch > 1.0001) {\n\t        throw new Error(\"Illegal rgb value: \" + ch);\n\t      }\n\t      if (ch < 0) {\n\t        ch = 0;\n\t      }\n\t      if (ch > 1) {\n\t        ch = 1;\n\t      }\n\t    }\n\t    results = [];\n\t    for (k = 0, len2 = tuple.length; k < len2; k++) {\n\t      ch = tuple[k];\n\t      results.push(Math.round(ch * 255));\n\t    }\n\t    return results;\n\t  };\n\n\t  conv = {\n\t    'xyz': {},\n\t    'luv': {},\n\t    'lch': {},\n\t    'husl': {},\n\t    'huslp': {},\n\t    'rgb': {},\n\t    'hex': {}\n\t  };\n\n\t  conv.xyz.rgb = function(tuple) {\n\t    var B, G, R;\n\t    R = fromLinear(dotProduct(m.R, tuple));\n\t    G = fromLinear(dotProduct(m.G, tuple));\n\t    B = fromLinear(dotProduct(m.B, tuple));\n\t    return [R, G, B];\n\t  };\n\n\t  conv.rgb.xyz = function(tuple) {\n\t    var B, G, R, X, Y, Z, rgbl;\n\t    R = tuple[0], G = tuple[1], B = tuple[2];\n\t    rgbl = [toLinear(R), toLinear(G), toLinear(B)];\n\t    X = dotProduct(m_inv.X, rgbl);\n\t    Y = dotProduct(m_inv.Y, rgbl);\n\t    Z = dotProduct(m_inv.Z, rgbl);\n\t    return [X, Y, Z];\n\t  };\n\n\t  Y_to_L = function(Y) {\n\t    if (Y <= epsilon) {\n\t      return (Y / refY) * kappa;\n\t    } else {\n\t      return 116 * Math.pow(Y / refY, 1 / 3) - 16;\n\t    }\n\t  };\n\n\t  L_to_Y = function(L) {\n\t    if (L <= 8) {\n\t      return refY * L / kappa;\n\t    } else {\n\t      return refY * Math.pow((L + 16) / 116, 3);\n\t    }\n\t  };\n\n\t  conv.xyz.luv = function(tuple) {\n\t    var L, U, V, X, Y, Z, varU, varV;\n\t    X = tuple[0], Y = tuple[1], Z = tuple[2];\n\t    varU = (4 * X) / (X + (15 * Y) + (3 * Z));\n\t    varV = (9 * Y) / (X + (15 * Y) + (3 * Z));\n\t    L = Y_to_L(Y);\n\t    if (L === 0) {\n\t      return [0, 0, 0];\n\t    }\n\t    U = 13 * L * (varU - refU);\n\t    V = 13 * L * (varV - refV);\n\t    return [L, U, V];\n\t  };\n\n\t  conv.luv.xyz = function(tuple) {\n\t    var L, U, V, X, Y, Z, varU, varV;\n\t    L = tuple[0], U = tuple[1], V = tuple[2];\n\t    if (L === 0) {\n\t      return [0, 0, 0];\n\t    }\n\t    varU = U / (13 * L) + refU;\n\t    varV = V / (13 * L) + refV;\n\t    Y = L_to_Y(L);\n\t    X = 0 - (9 * Y * varU) / ((varU - 4) * varV - varU * varV);\n\t    Z = (9 * Y - (15 * varV * Y) - (varV * X)) / (3 * varV);\n\t    return [X, Y, Z];\n\t  };\n\n\t  conv.luv.lch = function(tuple) {\n\t    var C, H, Hrad, L, U, V;\n\t    L = tuple[0], U = tuple[1], V = tuple[2];\n\t    C = Math.pow(Math.pow(U, 2) + Math.pow(V, 2), 1 / 2);\n\t    Hrad = Math.atan2(V, U);\n\t    H = Hrad * 360 / 2 / Math.PI;\n\t    if (H < 0) {\n\t      H = 360 + H;\n\t    }\n\t    return [L, C, H];\n\t  };\n\n\t  conv.lch.luv = function(tuple) {\n\t    var C, H, Hrad, L, U, V;\n\t    L = tuple[0], C = tuple[1], H = tuple[2];\n\t    Hrad = H / 360 * 2 * Math.PI;\n\t    U = Math.cos(Hrad) * C;\n\t    V = Math.sin(Hrad) * C;\n\t    return [L, U, V];\n\t  };\n\n\t  conv.husl.lch = function(tuple) {\n\t    var C, H, L, S, max;\n\t    H = tuple[0], S = tuple[1], L = tuple[2];\n\t    if (L > 99.9999999) {\n\t      return [100, 0, H];\n\t    }\n\t    if (L < 0.00000001) {\n\t      return [0, 0, H];\n\t    }\n\t    max = maxChromaForLH(L, H);\n\t    C = max / 100 * S;\n\t    return [L, C, H];\n\t  };\n\n\t  conv.lch.husl = function(tuple) {\n\t    var C, H, L, S, max;\n\t    L = tuple[0], C = tuple[1], H = tuple[2];\n\t    if (L > 99.9999999) {\n\t      return [H, 0, 100];\n\t    }\n\t    if (L < 0.00000001) {\n\t      return [H, 0, 0];\n\t    }\n\t    max = maxChromaForLH(L, H);\n\t    S = C / max * 100;\n\t    return [H, S, L];\n\t  };\n\n\t  conv.huslp.lch = function(tuple) {\n\t    var C, H, L, S, max;\n\t    H = tuple[0], S = tuple[1], L = tuple[2];\n\t    if (L > 99.9999999) {\n\t      return [100, 0, H];\n\t    }\n\t    if (L < 0.00000001) {\n\t      return [0, 0, H];\n\t    }\n\t    max = maxSafeChromaForL(L);\n\t    C = max / 100 * S;\n\t    return [L, C, H];\n\t  };\n\n\t  conv.lch.huslp = function(tuple) {\n\t    var C, H, L, S, max;\n\t    L = tuple[0], C = tuple[1], H = tuple[2];\n\t    if (L > 99.9999999) {\n\t      return [H, 0, 100];\n\t    }\n\t    if (L < 0.00000001) {\n\t      return [H, 0, 0];\n\t    }\n\t    max = maxSafeChromaForL(L);\n\t    S = C / max * 100;\n\t    return [H, S, L];\n\t  };\n\n\t  conv.rgb.hex = function(tuple) {\n\t    var ch, hex, j, len1;\n\t    hex = \"#\";\n\t    tuple = rgbPrepare(tuple);\n\t    for (j = 0, len1 = tuple.length; j < len1; j++) {\n\t      ch = tuple[j];\n\t      ch = ch.toString(16);\n\t      if (ch.length === 1) {\n\t        ch = \"0\" + ch;\n\t      }\n\t      hex += ch;\n\t    }\n\t    return hex;\n\t  };\n\n\t  conv.hex.rgb = function(hex) {\n\t    var b, g, j, len1, n, r, ref, results;\n\t    if (hex.charAt(0) === \"#\") {\n\t      hex = hex.substring(1, 7);\n\t    }\n\t    r = hex.substring(0, 2);\n\t    g = hex.substring(2, 4);\n\t    b = hex.substring(4, 6);\n\t    ref = [r, g, b];\n\t    results = [];\n\t    for (j = 0, len1 = ref.length; j < len1; j++) {\n\t      n = ref[j];\n\t      results.push(parseInt(n, 16) / 255);\n\t    }\n\t    return results;\n\t  };\n\n\t  conv.lch.rgb = function(tuple) {\n\t    return conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(tuple)));\n\t  };\n\n\t  conv.rgb.lch = function(tuple) {\n\t    return conv.luv.lch(conv.xyz.luv(conv.rgb.xyz(tuple)));\n\t  };\n\n\t  conv.husl.rgb = function(tuple) {\n\t    return conv.lch.rgb(conv.husl.lch(tuple));\n\t  };\n\n\t  conv.rgb.husl = function(tuple) {\n\t    return conv.lch.husl(conv.rgb.lch(tuple));\n\t  };\n\n\t  conv.huslp.rgb = function(tuple) {\n\t    return conv.lch.rgb(conv.huslp.lch(tuple));\n\t  };\n\n\t  conv.rgb.huslp = function(tuple) {\n\t    return conv.lch.huslp(conv.rgb.lch(tuple));\n\t  };\n\n\t  root = {};\n\n\t  root.fromRGB = function(R, G, B) {\n\t    return conv.rgb.husl([R, G, B]);\n\t  };\n\n\t  root.fromHex = function(hex) {\n\t    return conv.rgb.husl(conv.hex.rgb(hex));\n\t  };\n\n\t  root.toRGB = function(H, S, L) {\n\t    return conv.husl.rgb([H, S, L]);\n\t  };\n\n\t  root.toHex = function(H, S, L) {\n\t    return conv.rgb.hex(conv.husl.rgb([H, S, L]));\n\t  };\n\n\t  root.p = {};\n\n\t  root.p.toRGB = function(H, S, L) {\n\t    return conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(conv.huslp.lch([H, S, L]))));\n\t  };\n\n\t  root.p.toHex = function(H, S, L) {\n\t    return conv.rgb.hex(conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(conv.huslp.lch([H, S, L])))));\n\t  };\n\n\t  root.p.fromRGB = function(R, G, B) {\n\t    return conv.lch.huslp(conv.luv.lch(conv.xyz.luv(conv.rgb.xyz([R, G, B]))));\n\t  };\n\n\t  root.p.fromHex = function(hex) {\n\t    return conv.lch.huslp(conv.luv.lch(conv.xyz.luv(conv.rgb.xyz(conv.hex.rgb(hex)))));\n\t  };\n\n\t  root._conv = conv;\n\n\t  root._round = round;\n\n\t  root._rgbPrepare = rgbPrepare;\n\n\t  root._getBounds = getBounds;\n\n\t  root._maxChromaForLH = maxChromaForLH;\n\n\t  root._maxSafeChromaForL = maxSafeChromaForL;\n\n\t  if (!((typeof module !== \"undefined\" && module !== null) || (typeof jQuery !== \"undefined\" && jQuery !== null) || (typeof requirejs !== \"undefined\" && requirejs !== null))) {\n\t    this.HUSL = root;\n\t  }\n\n\t  if (typeof module !== \"undefined\" && module !== null) {\n\t    module.exports = root;\n\t  }\n\n\t  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n\t    jQuery.husl = root;\n\t  }\n\n\t  if ((typeof requirejs !== \"undefined\" && requirejs !== null) && (\"function\" !== \"undefined\" && __webpack_require__(17) !== null)) {\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (root), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)(module)))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module color-space/cmyk\n\t */\n\n\tvar rgb = __webpack_require__(2);\n\n\tmodule.exports = {\n\t\tname: 'cmyk',\n\t\tmin: [0,0,0,0],\n\t\tmax: [100,100,100,100],\n\t\tchannel: ['cyan', 'magenta', 'yellow', 'black'],\n\n\t\trgb: function(cmyk) {\n\t\t\tvar c = cmyk[0] / 100,\n\t\t\t\t\tm = cmyk[1] / 100,\n\t\t\t\t\ty = cmyk[2] / 100,\n\t\t\t\t\tk = cmyk[3] / 100,\n\t\t\t\t\tr, g, b;\n\n\t\t\tr = 1 - Math.min(1, c * (1 - k) + k);\n\t\t\tg = 1 - Math.min(1, m * (1 - k) + k);\n\t\t\tb = 1 - Math.min(1, y * (1 - k) + k);\n\t\t\treturn [r * 255, g * 255, b * 255];\n\t\t}\n\t};\n\n\n\t//extend rgb\n\trgb.cmyk = function(rgb) {\n\t\tvar r = rgb[0] / 255,\n\t\t\t\tg = rgb[1] / 255,\n\t\t\t\tb = rgb[2] / 255,\n\t\t\t\tc, m, y, k;\n\n\t\tk = Math.min(1 - r, 1 - g, 1 - b);\n\t\tc = (1 - r - k) / (1 - k) || 0;\n\t\tm = (1 - g - k) / (1 - k) || 0;\n\t\ty = (1 - b - k) / (1 - k) || 0;\n\t\treturn [c * 100, m * 100, y * 100, k * 100];\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * A uniform wrapper for husl.\n\t * // http://www.boronine.com/husl/\n\t *\n\t * @module color-space/husl\n\t */\n\n\tvar xyz = __webpack_require__(1);\n\tvar lchuv = __webpack_require__(4);\n\tvar _husl = __webpack_require__(8);\n\n\n\tmodule.exports = {\n\t\tname: 'husl',\n\t\tmin: [0,0,0],\n\t\tmax: [360,100,100],\n\t\tchannel: ['hue', 'saturation', 'lightness'],\n\n\t\tlchuv: _husl._conv.husl.lch,\n\n\t\txyz: function(arg){\n\t\t\treturn lchuv.xyz(_husl._conv.husl.lch(arg));\n\t\t},\n\n\t\t//a shorter way to convert to huslp\n\t\thuslp: function(arg){\n\t\t\treturn _husl._conv.lch.huslp( _husl._conv.husl.lch(arg));\n\t\t}\n\t};\n\n\t//extend lchuv, xyz\n\tlchuv.husl = _husl._conv.lch.husl;\n\txyz.husl = function(arg){\n\t\treturn _husl._conv.lch.husl(xyz.lchuv(arg));\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * A uniform wrapper for huslp.\n\t * // http://www.boronine.com/husl/\n\t *\n\t * @module color-space/huslp\n\t */\n\n\tvar xyz = __webpack_require__(1);\n\tvar lchuv = __webpack_require__(4);\n\tvar _husl = __webpack_require__(8);\n\n\tmodule.exports = {\n\t\tname: 'huslp',\n\t\tmin: [0,0,0],\n\t\tmax: [360,100,100],\n\t\tchannel: ['hue', 'saturation', 'lightness'],\n\n\t\tlchuv: _husl._conv.huslp.lch,\n\t\txyz: function(arg){return lchuv.xyz(_husl._conv.huslp.lch(arg));},\n\n\t\t//a shorter way to convert to husl\n\t\thusl: function(arg){\n\t\t\treturn _husl._conv.lch.husl( _husl._conv.huslp.lch(arg));\n\t\t}\n\t};\n\n\t//extend lchuv, xyz\n\tlchuv.huslp = _husl._conv.lch.huslp;\n\txyz.huslp = function(arg){return _husl._conv.lch.huslp(xyz.lchuv(arg));};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module color-space/hwb\n\t */\n\n\tvar rgb = __webpack_require__(2);\n\tvar hsv = __webpack_require__(5);\n\tvar hsl = __webpack_require__(3);\n\n\n\tvar hwb = module.exports = {\n\t\tname: 'hwb',\n\t\tmin: [0,0,0],\n\t\tmax: [360,100,100],\n\t\tchannel: ['hue', 'whiteness', 'blackness'],\n\n\t\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\t\trgb: function(hwb) {\n\t\t\tvar h = hwb[0] / 360,\n\t\t\t\twh = hwb[1] / 100,\n\t\t\t\tbl = hwb[2] / 100,\n\t\t\t\tratio = wh + bl,\n\t\t\t\ti, v, f, n;\n\n\t\t\tvar r, g, b;\n\n\t\t\t// wh + bl cant be > 1\n\t\t\tif (ratio > 1) {\n\t\t\t\twh /= ratio;\n\t\t\t\tbl /= ratio;\n\t\t\t}\n\n\t\t\ti = Math.floor(6 * h);\n\t\t\tv = 1 - bl;\n\t\t\tf = 6 * h - i;\n\n\t\t\t//if it is even\n\t\t\tif ((i & 0x01) !== 0) {\n\t\t\t\tf = 1 - f;\n\t\t\t}\n\n\t\t\tn = wh + f * (v - wh);  // linear interpolation\n\n\t\t\tswitch (i) {\n\t\t\t\tdefault:\n\t\t\t\tcase 6:\n\t\t\t\tcase 0: r = v; g = n; b = wh; break;\n\t\t\t\tcase 1: r = n; g = v; b = wh; break;\n\t\t\t\tcase 2: r = wh; g = v; b = n; break;\n\t\t\t\tcase 3: r = wh; g = n; b = v; break;\n\t\t\t\tcase 4: r = n; g = wh; b = v; break;\n\t\t\t\tcase 5: r = v; g = wh; b = n; break;\n\t\t\t}\n\n\t\t\treturn [r * 255, g * 255, b * 255];\n\t\t},\n\n\n\t\t// http://alvyray.com/Papers/CG/HWB_JGTv208.pdf\n\t\thsv: function(arg){\n\t\t\tvar h = arg[0], w = arg[1], b = arg[2], s, v;\n\n\t\t\t//if w+b > 100% - take proportion (how many times )\n\t\t\tif (w + b >= 100){\n\t\t\t\ts = 0;\n\t\t\t\tv = 100 * w/(w+b);\n\t\t\t}\n\n\t\t\t//by default - take wiki formula\n\t\t\telse {\n\t\t\t\ts = 100-(w/(1-b/100));\n\t\t\t\tv = 100-b;\n\t\t\t}\n\n\n\t\t\treturn [h, s, v];\n\t\t},\n\n\t\thsl: function(arg){\n\t\t\treturn hsv.hsl(hwb.hsv(arg));\n\t\t}\n\t};\n\n\n\t//extend rgb\n\trgb.hwb = function(val) {\n\t\tvar r = val[0],\n\t\t\t\tg = val[1],\n\t\t\t\tb = val[2],\n\t\t\t\th = rgb.hsl(val)[0],\n\t\t\t\tw = 1/255 * Math.min(r, Math.min(g, b));\n\n\t\t\t\tb = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n\t\treturn [h, w * 100, b * 100];\n\t};\n\n\n\n\t//keep proper hue on 0 values (conversion to rgb loses hue on zero-lightness)\n\thsv.hwb = function(arg){\n\t\tvar h = arg[0], s = arg[1], v = arg[2];\n\t\treturn [h, v === 0 ? 0 : (v * (1-s/100)), 100 - v];\n\t};\n\n\n\t//extend hsl with proper conversions\n\thsl.hwb = function(arg){\n\t\treturn hsv.hwb(hsl.hsv(arg));\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module color-space\n\t *\n\t * @todo  to-source method, preparing the code for webworker\n\t * @todo  implement all side spaces from http://en.wikipedia.org/wiki/Category:Color_space yuv, yiq etc.\n\t * @todo  here are additional spaces http://www.jentronics.com/color.html ITU, REC709, SMTPE, NTSC, GREY\n\t *\n\t * @todo implement asm-js way to convert spaces (promises to be times faster)\n\t *\n\t */\n\n\tvar addConvertor = __webpack_require__(15);\n\n\n\t/** Exported spaces */\n\tvar spaces = {\n\t\trgb: __webpack_require__(2),\n\t\thsl: __webpack_require__(3),\n\t\thsv: __webpack_require__(5),\n\t\thwb: __webpack_require__(12),\n\t\tcmyk: __webpack_require__(9),\n\t\txyz: __webpack_require__(1),\n\t\tlab: __webpack_require__(6),\n\t\tlchab: __webpack_require__(14),\n\t\tluv: __webpack_require__(7),\n\t\tlchuv: __webpack_require__(4),\n\t\thusl: __webpack_require__(10),\n\t\thuslp: __webpack_require__(11)\n\t};\n\n\n\n\t//build absent convertors from each to every space\n\tvar fromSpace, toSpace;\n\tfor (var fromSpaceName in spaces) {\n\t\tfromSpace = spaces[fromSpaceName];\n\t\tfor (var toSpaceName in spaces) {\n\t\t\tif (toSpaceName !== fromSpaceName) {\n\t\t\t\ttoSpace = spaces[toSpaceName];\n\t\t\t\taddConvertor(fromSpace, toSpace);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tmodule.exports = spaces;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Cylindrical LAB\n\t *\n\t * @module color-space/lchab\n\t */\n\n\tvar xyz = __webpack_require__(1);\n\tvar lab = __webpack_require__(6);\n\n\n\t//cylindrical lab\n\tvar lchab = module.exports = {\n\t\tname: 'lchab',\n\t\tmin: [0,0,0],\n\t\tmax: [100,100,360],\n\t\tchannel: ['lightness', 'chroma', 'hue'],\n\t\talias: ['cielch', 'lch'],\n\n\t\txyz: function(arg) {\n\t\t\treturn lab.xyz(lchab.lab(arg));\n\t\t},\n\n\t\tlab: function(lch) {\n\t\t\tvar l = lch[0],\n\t\t\t\t\tc = lch[1],\n\t\t\t\t\th = lch[2],\n\t\t\t\t\ta, b, hr;\n\n\t\t\thr = h / 360 * 2 * Math.PI;\n\t\t\ta = c * Math.cos(hr);\n\t\t\tb = c * Math.sin(hr);\n\t\t\treturn [l, a, b];\n\t\t}\n\t};\n\n\n\t//extend lab\n\tlab.lchab = function(lab) {\n\t\tvar l = lab[0],\n\t\t\t\ta = lab[1],\n\t\t\t\tb = lab[2],\n\t\t\t\thr, h, c;\n\n\t\thr = Math.atan2(b, a);\n\t\th = hr * 360 / 2 / Math.PI;\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\t\tc = Math.sqrt(a * a + b * b);\n\t\treturn [l, c, h];\n\t};\n\n\txyz.lchab = function(arg){\n\t\treturn lab.lchab(xyz.lab(arg));\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Add a convertor from one to another space via XYZ or RGB space as a medium.\r\n\t *\r\n\t * @module  color-space/add-convertor\r\n\t */\r\n\r\n\tvar xyz = __webpack_require__(1);\r\n\tvar rgb = __webpack_require__(2);\r\n\r\n\tmodule.exports = addConvertor;\r\n\r\n\r\n\t/**\r\n\t * Add convertor from space A to space B.\r\n\t * So space A will be able to transform to B.\r\n\t */\r\n\tfunction addConvertor(fromSpace, toSpace){\r\n\t\tif (!fromSpace[toSpace.name]) {\r\n\t\t\tfromSpace[toSpace.name] = getConvertor(fromSpace, toSpace);\r\n\t\t}\r\n\r\n\t\treturn fromSpace;\r\n\t}\r\n\r\n\r\n\t/** return converter through xyz/rgb space */\r\n\tfunction getConvertor(fromSpace, toSpace){\r\n\t\tvar toSpaceName = toSpace.name;\r\n\r\n\t\t//create xyz converter, if available\r\n\t\tif (fromSpace.xyz && xyz[toSpaceName]) {\r\n\t\t\treturn function(arg){\r\n\t\t\t\treturn xyz[toSpaceName](fromSpace.xyz(arg));\r\n\t\t\t};\r\n\t\t}\r\n\t\t//create rgb converter\r\n\t\telse if (fromSpace.rgb && rgb[toSpaceName]) {\r\n\t\t\treturn function(arg){\r\n\t\t\t\treturn rgb[toSpaceName](fromSpace.rgb(arg));\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthrow Error('Can’t add convertor from ' + fromSpace.name + ' to ' + toSpaceName);\r\n\t}\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t\t\"aliceblue\": [\n\t\t\t240,\n\t\t\t248,\n\t\t\t255\n\t\t],\n\t\t\"antiquewhite\": [\n\t\t\t250,\n\t\t\t235,\n\t\t\t215\n\t\t],\n\t\t\"aqua\": [\n\t\t\t0,\n\t\t\t255,\n\t\t\t255\n\t\t],\n\t\t\"aquamarine\": [\n\t\t\t127,\n\t\t\t255,\n\t\t\t212\n\t\t],\n\t\t\"azure\": [\n\t\t\t240,\n\t\t\t255,\n\t\t\t255\n\t\t],\n\t\t\"beige\": [\n\t\t\t245,\n\t\t\t245,\n\t\t\t220\n\t\t],\n\t\t\"bisque\": [\n\t\t\t255,\n\t\t\t228,\n\t\t\t196\n\t\t],\n\t\t\"black\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"blanchedalmond\": [\n\t\t\t255,\n\t\t\t235,\n\t\t\t205\n\t\t],\n\t\t\"blue\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t255\n\t\t],\n\t\t\"blueviolet\": [\n\t\t\t138,\n\t\t\t43,\n\t\t\t226\n\t\t],\n\t\t\"brown\": [\n\t\t\t165,\n\t\t\t42,\n\t\t\t42\n\t\t],\n\t\t\"burlywood\": [\n\t\t\t222,\n\t\t\t184,\n\t\t\t135\n\t\t],\n\t\t\"cadetblue\": [\n\t\t\t95,\n\t\t\t158,\n\t\t\t160\n\t\t],\n\t\t\"chartreuse\": [\n\t\t\t127,\n\t\t\t255,\n\t\t\t0\n\t\t],\n\t\t\"chocolate\": [\n\t\t\t210,\n\t\t\t105,\n\t\t\t30\n\t\t],\n\t\t\"coral\": [\n\t\t\t255,\n\t\t\t127,\n\t\t\t80\n\t\t],\n\t\t\"cornflowerblue\": [\n\t\t\t100,\n\t\t\t149,\n\t\t\t237\n\t\t],\n\t\t\"cornsilk\": [\n\t\t\t255,\n\t\t\t248,\n\t\t\t220\n\t\t],\n\t\t\"crimson\": [\n\t\t\t220,\n\t\t\t20,\n\t\t\t60\n\t\t],\n\t\t\"cyan\": [\n\t\t\t0,\n\t\t\t255,\n\t\t\t255\n\t\t],\n\t\t\"darkblue\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t139\n\t\t],\n\t\t\"darkcyan\": [\n\t\t\t0,\n\t\t\t139,\n\t\t\t139\n\t\t],\n\t\t\"darkgoldenrod\": [\n\t\t\t184,\n\t\t\t134,\n\t\t\t11\n\t\t],\n\t\t\"darkgray\": [\n\t\t\t169,\n\t\t\t169,\n\t\t\t169\n\t\t],\n\t\t\"darkgreen\": [\n\t\t\t0,\n\t\t\t100,\n\t\t\t0\n\t\t],\n\t\t\"darkgrey\": [\n\t\t\t169,\n\t\t\t169,\n\t\t\t169\n\t\t],\n\t\t\"darkkhaki\": [\n\t\t\t189,\n\t\t\t183,\n\t\t\t107\n\t\t],\n\t\t\"darkmagenta\": [\n\t\t\t139,\n\t\t\t0,\n\t\t\t139\n\t\t],\n\t\t\"darkolivegreen\": [\n\t\t\t85,\n\t\t\t107,\n\t\t\t47\n\t\t],\n\t\t\"darkorange\": [\n\t\t\t255,\n\t\t\t140,\n\t\t\t0\n\t\t],\n\t\t\"darkorchid\": [\n\t\t\t153,\n\t\t\t50,\n\t\t\t204\n\t\t],\n\t\t\"darkred\": [\n\t\t\t139,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"darksalmon\": [\n\t\t\t233,\n\t\t\t150,\n\t\t\t122\n\t\t],\n\t\t\"darkseagreen\": [\n\t\t\t143,\n\t\t\t188,\n\t\t\t143\n\t\t],\n\t\t\"darkslateblue\": [\n\t\t\t72,\n\t\t\t61,\n\t\t\t139\n\t\t],\n\t\t\"darkslategray\": [\n\t\t\t47,\n\t\t\t79,\n\t\t\t79\n\t\t],\n\t\t\"darkslategrey\": [\n\t\t\t47,\n\t\t\t79,\n\t\t\t79\n\t\t],\n\t\t\"darkturquoise\": [\n\t\t\t0,\n\t\t\t206,\n\t\t\t209\n\t\t],\n\t\t\"darkviolet\": [\n\t\t\t148,\n\t\t\t0,\n\t\t\t211\n\t\t],\n\t\t\"deeppink\": [\n\t\t\t255,\n\t\t\t20,\n\t\t\t147\n\t\t],\n\t\t\"deepskyblue\": [\n\t\t\t0,\n\t\t\t191,\n\t\t\t255\n\t\t],\n\t\t\"dimgray\": [\n\t\t\t105,\n\t\t\t105,\n\t\t\t105\n\t\t],\n\t\t\"dimgrey\": [\n\t\t\t105,\n\t\t\t105,\n\t\t\t105\n\t\t],\n\t\t\"dodgerblue\": [\n\t\t\t30,\n\t\t\t144,\n\t\t\t255\n\t\t],\n\t\t\"firebrick\": [\n\t\t\t178,\n\t\t\t34,\n\t\t\t34\n\t\t],\n\t\t\"floralwhite\": [\n\t\t\t255,\n\t\t\t250,\n\t\t\t240\n\t\t],\n\t\t\"forestgreen\": [\n\t\t\t34,\n\t\t\t139,\n\t\t\t34\n\t\t],\n\t\t\"fuchsia\": [\n\t\t\t255,\n\t\t\t0,\n\t\t\t255\n\t\t],\n\t\t\"gainsboro\": [\n\t\t\t220,\n\t\t\t220,\n\t\t\t220\n\t\t],\n\t\t\"ghostwhite\": [\n\t\t\t248,\n\t\t\t248,\n\t\t\t255\n\t\t],\n\t\t\"gold\": [\n\t\t\t255,\n\t\t\t215,\n\t\t\t0\n\t\t],\n\t\t\"goldenrod\": [\n\t\t\t218,\n\t\t\t165,\n\t\t\t32\n\t\t],\n\t\t\"gray\": [\n\t\t\t128,\n\t\t\t128,\n\t\t\t128\n\t\t],\n\t\t\"green\": [\n\t\t\t0,\n\t\t\t128,\n\t\t\t0\n\t\t],\n\t\t\"greenyellow\": [\n\t\t\t173,\n\t\t\t255,\n\t\t\t47\n\t\t],\n\t\t\"grey\": [\n\t\t\t128,\n\t\t\t128,\n\t\t\t128\n\t\t],\n\t\t\"honeydew\": [\n\t\t\t240,\n\t\t\t255,\n\t\t\t240\n\t\t],\n\t\t\"hotpink\": [\n\t\t\t255,\n\t\t\t105,\n\t\t\t180\n\t\t],\n\t\t\"indianred\": [\n\t\t\t205,\n\t\t\t92,\n\t\t\t92\n\t\t],\n\t\t\"indigo\": [\n\t\t\t75,\n\t\t\t0,\n\t\t\t130\n\t\t],\n\t\t\"ivory\": [\n\t\t\t255,\n\t\t\t255,\n\t\t\t240\n\t\t],\n\t\t\"khaki\": [\n\t\t\t240,\n\t\t\t230,\n\t\t\t140\n\t\t],\n\t\t\"lavender\": [\n\t\t\t230,\n\t\t\t230,\n\t\t\t250\n\t\t],\n\t\t\"lavenderblush\": [\n\t\t\t255,\n\t\t\t240,\n\t\t\t245\n\t\t],\n\t\t\"lawngreen\": [\n\t\t\t124,\n\t\t\t252,\n\t\t\t0\n\t\t],\n\t\t\"lemonchiffon\": [\n\t\t\t255,\n\t\t\t250,\n\t\t\t205\n\t\t],\n\t\t\"lightblue\": [\n\t\t\t173,\n\t\t\t216,\n\t\t\t230\n\t\t],\n\t\t\"lightcoral\": [\n\t\t\t240,\n\t\t\t128,\n\t\t\t128\n\t\t],\n\t\t\"lightcyan\": [\n\t\t\t224,\n\t\t\t255,\n\t\t\t255\n\t\t],\n\t\t\"lightgoldenrodyellow\": [\n\t\t\t250,\n\t\t\t250,\n\t\t\t210\n\t\t],\n\t\t\"lightgray\": [\n\t\t\t211,\n\t\t\t211,\n\t\t\t211\n\t\t],\n\t\t\"lightgreen\": [\n\t\t\t144,\n\t\t\t238,\n\t\t\t144\n\t\t],\n\t\t\"lightgrey\": [\n\t\t\t211,\n\t\t\t211,\n\t\t\t211\n\t\t],\n\t\t\"lightpink\": [\n\t\t\t255,\n\t\t\t182,\n\t\t\t193\n\t\t],\n\t\t\"lightsalmon\": [\n\t\t\t255,\n\t\t\t160,\n\t\t\t122\n\t\t],\n\t\t\"lightseagreen\": [\n\t\t\t32,\n\t\t\t178,\n\t\t\t170\n\t\t],\n\t\t\"lightskyblue\": [\n\t\t\t135,\n\t\t\t206,\n\t\t\t250\n\t\t],\n\t\t\"lightslategray\": [\n\t\t\t119,\n\t\t\t136,\n\t\t\t153\n\t\t],\n\t\t\"lightslategrey\": [\n\t\t\t119,\n\t\t\t136,\n\t\t\t153\n\t\t],\n\t\t\"lightsteelblue\": [\n\t\t\t176,\n\t\t\t196,\n\t\t\t222\n\t\t],\n\t\t\"lightyellow\": [\n\t\t\t255,\n\t\t\t255,\n\t\t\t224\n\t\t],\n\t\t\"lime\": [\n\t\t\t0,\n\t\t\t255,\n\t\t\t0\n\t\t],\n\t\t\"limegreen\": [\n\t\t\t50,\n\t\t\t205,\n\t\t\t50\n\t\t],\n\t\t\"linen\": [\n\t\t\t250,\n\t\t\t240,\n\t\t\t230\n\t\t],\n\t\t\"magenta\": [\n\t\t\t255,\n\t\t\t0,\n\t\t\t255\n\t\t],\n\t\t\"maroon\": [\n\t\t\t128,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"mediumaquamarine\": [\n\t\t\t102,\n\t\t\t205,\n\t\t\t170\n\t\t],\n\t\t\"mediumblue\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t205\n\t\t],\n\t\t\"mediumorchid\": [\n\t\t\t186,\n\t\t\t85,\n\t\t\t211\n\t\t],\n\t\t\"mediumpurple\": [\n\t\t\t147,\n\t\t\t112,\n\t\t\t219\n\t\t],\n\t\t\"mediumseagreen\": [\n\t\t\t60,\n\t\t\t179,\n\t\t\t113\n\t\t],\n\t\t\"mediumslateblue\": [\n\t\t\t123,\n\t\t\t104,\n\t\t\t238\n\t\t],\n\t\t\"mediumspringgreen\": [\n\t\t\t0,\n\t\t\t250,\n\t\t\t154\n\t\t],\n\t\t\"mediumturquoise\": [\n\t\t\t72,\n\t\t\t209,\n\t\t\t204\n\t\t],\n\t\t\"mediumvioletred\": [\n\t\t\t199,\n\t\t\t21,\n\t\t\t133\n\t\t],\n\t\t\"midnightblue\": [\n\t\t\t25,\n\t\t\t25,\n\t\t\t112\n\t\t],\n\t\t\"mintcream\": [\n\t\t\t245,\n\t\t\t255,\n\t\t\t250\n\t\t],\n\t\t\"mistyrose\": [\n\t\t\t255,\n\t\t\t228,\n\t\t\t225\n\t\t],\n\t\t\"moccasin\": [\n\t\t\t255,\n\t\t\t228,\n\t\t\t181\n\t\t],\n\t\t\"navajowhite\": [\n\t\t\t255,\n\t\t\t222,\n\t\t\t173\n\t\t],\n\t\t\"navy\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t128\n\t\t],\n\t\t\"oldlace\": [\n\t\t\t253,\n\t\t\t245,\n\t\t\t230\n\t\t],\n\t\t\"olive\": [\n\t\t\t128,\n\t\t\t128,\n\t\t\t0\n\t\t],\n\t\t\"olivedrab\": [\n\t\t\t107,\n\t\t\t142,\n\t\t\t35\n\t\t],\n\t\t\"orange\": [\n\t\t\t255,\n\t\t\t165,\n\t\t\t0\n\t\t],\n\t\t\"orangered\": [\n\t\t\t255,\n\t\t\t69,\n\t\t\t0\n\t\t],\n\t\t\"orchid\": [\n\t\t\t218,\n\t\t\t112,\n\t\t\t214\n\t\t],\n\t\t\"palegoldenrod\": [\n\t\t\t238,\n\t\t\t232,\n\t\t\t170\n\t\t],\n\t\t\"palegreen\": [\n\t\t\t152,\n\t\t\t251,\n\t\t\t152\n\t\t],\n\t\t\"paleturquoise\": [\n\t\t\t175,\n\t\t\t238,\n\t\t\t238\n\t\t],\n\t\t\"palevioletred\": [\n\t\t\t219,\n\t\t\t112,\n\t\t\t147\n\t\t],\n\t\t\"papayawhip\": [\n\t\t\t255,\n\t\t\t239,\n\t\t\t213\n\t\t],\n\t\t\"peachpuff\": [\n\t\t\t255,\n\t\t\t218,\n\t\t\t185\n\t\t],\n\t\t\"peru\": [\n\t\t\t205,\n\t\t\t133,\n\t\t\t63\n\t\t],\n\t\t\"pink\": [\n\t\t\t255,\n\t\t\t192,\n\t\t\t203\n\t\t],\n\t\t\"plum\": [\n\t\t\t221,\n\t\t\t160,\n\t\t\t221\n\t\t],\n\t\t\"powderblue\": [\n\t\t\t176,\n\t\t\t224,\n\t\t\t230\n\t\t],\n\t\t\"purple\": [\n\t\t\t128,\n\t\t\t0,\n\t\t\t128\n\t\t],\n\t\t\"rebeccapurple\": [\n\t\t\t102,\n\t\t\t51,\n\t\t\t153\n\t\t],\n\t\t\"red\": [\n\t\t\t255,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"rosybrown\": [\n\t\t\t188,\n\t\t\t143,\n\t\t\t143\n\t\t],\n\t\t\"royalblue\": [\n\t\t\t65,\n\t\t\t105,\n\t\t\t225\n\t\t],\n\t\t\"saddlebrown\": [\n\t\t\t139,\n\t\t\t69,\n\t\t\t19\n\t\t],\n\t\t\"salmon\": [\n\t\t\t250,\n\t\t\t128,\n\t\t\t114\n\t\t],\n\t\t\"sandybrown\": [\n\t\t\t244,\n\t\t\t164,\n\t\t\t96\n\t\t],\n\t\t\"seagreen\": [\n\t\t\t46,\n\t\t\t139,\n\t\t\t87\n\t\t],\n\t\t\"seashell\": [\n\t\t\t255,\n\t\t\t245,\n\t\t\t238\n\t\t],\n\t\t\"sienna\": [\n\t\t\t160,\n\t\t\t82,\n\t\t\t45\n\t\t],\n\t\t\"silver\": [\n\t\t\t192,\n\t\t\t192,\n\t\t\t192\n\t\t],\n\t\t\"skyblue\": [\n\t\t\t135,\n\t\t\t206,\n\t\t\t235\n\t\t],\n\t\t\"slateblue\": [\n\t\t\t106,\n\t\t\t90,\n\t\t\t205\n\t\t],\n\t\t\"slategray\": [\n\t\t\t112,\n\t\t\t128,\n\t\t\t144\n\t\t],\n\t\t\"slategrey\": [\n\t\t\t112,\n\t\t\t128,\n\t\t\t144\n\t\t],\n\t\t\"snow\": [\n\t\t\t255,\n\t\t\t250,\n\t\t\t250\n\t\t],\n\t\t\"springgreen\": [\n\t\t\t0,\n\t\t\t255,\n\t\t\t127\n\t\t],\n\t\t\"steelblue\": [\n\t\t\t70,\n\t\t\t130,\n\t\t\t180\n\t\t],\n\t\t\"tan\": [\n\t\t\t210,\n\t\t\t180,\n\t\t\t140\n\t\t],\n\t\t\"teal\": [\n\t\t\t0,\n\t\t\t128,\n\t\t\t128\n\t\t],\n\t\t\"thistle\": [\n\t\t\t216,\n\t\t\t191,\n\t\t\t216\n\t\t],\n\t\t\"tomato\": [\n\t\t\t255,\n\t\t\t99,\n\t\t\t71\n\t\t],\n\t\t\"turquoise\": [\n\t\t\t64,\n\t\t\t224,\n\t\t\t208\n\t\t],\n\t\t\"violet\": [\n\t\t\t238,\n\t\t\t130,\n\t\t\t238\n\t\t],\n\t\t\"wheat\": [\n\t\t\t245,\n\t\t\t222,\n\t\t\t179\n\t\t],\n\t\t\"white\": [\n\t\t\t255,\n\t\t\t255,\n\t\t\t255\n\t\t],\n\t\t\"whitesmoke\": [\n\t\t\t245,\n\t\t\t245,\n\t\t\t245\n\t\t],\n\t\t\"yellow\": [\n\t\t\t255,\n\t\t\t255,\n\t\t\t0\n\t\t],\n\t\t\"yellowgreen\": [\n\t\t\t154,\n\t\t\t205,\n\t\t\t50\n\t\t]\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d0eb6a40f7bcc829b12b\n **/","'use strict';\n\nvar colorSpace = require('color-space');\nvar cssColors = require('./palettes/css.json');\n\n\n\n/**\nShorthand for creation of a new color object.\n\n@name ColorShorthand\n@function\n\n@param {Array} values - Values in the corresponding color space\n@param {number} [alpha = 1] - Alpha of the color\n*/\n\n\n/**\nColor instance\n\n@constructor\n\n@param {Array} values - Values in the corresponding color space\n@param {number} [alpha=1] - Alpha of the color\n@param {Color.spaces} [space='rgb'] - Space corresponding to the values\n\n@property {Array} values - Values in given color space\n@property {string} space - Current color space\n@property {number} alpha - Alpha of tho color\n@property {Color} originalColor - The color this was converted from (if\n\tapplicable)\n*/\nfunction Color(values, spaceAlpha, space) {\n\tthis.values = values;\n\tthis.alpha = 1;\n\tthis.space = 'rgb';\n\tthis.originalColor = null;\n\n\tif (space !== undefined) {\n\t\tthis.alpha = spaceAlpha;\n\t\tthis.space = space;\n\t} else if (spaceAlpha !== undefined) {\n\t\tif (typeof spaceAlpha === 'number') {\n\t\t\tthis.alpha = spaceAlpha;\n\t\t} else {\n\t\t\tthis.space = spaceAlpha;\n\t\t}\n\t}\n}\n/**\nConvert to string representation. Gives valid CSS representation for rgb, hsl,\nand hsb. Includes alpha component if and only if the alpha is less than one.\n*/\nColor.prototype.toString = function toString() {\n\tvar functionSuffix = '';\n\tvar alphaText = '';\n\n\tif (this.alpha !== 1) {\n\t\tif (['rgb', 'hsl'].indexOf(this.space) !== -1) {\n\t\t\tfunctionSuffix = 'a';\n\t\t\talphaText = ', ' + this.alpha;\n\t\t} else {\n\t\t\talphaText = ', [alpha = ' + this.alpha + ']';\n\t\t}\n\t}\n\n\treturn this.space + functionSuffix + '(' + this.values.join(', ') + alphaText + ')';\n};\n/**\nConverts to hex representation. Includes alpha component if and only if the\nalpha is less than one.\n*/\nColor.prototype.toHex = function toHex() {\n\tvar hex = '#' + this.convert('rgb').values.map(function asHex(raw) {\n\t\treturn hexDouble(Math.min(Math.round(raw), 255));\n\t}).join('');\n\n\tif (this.alpha >= 1) {\n\t\treturn hex;\n\t} else {\n\t\treturn hex + hexDouble(Math.round(this.alpha * 255));\n\t}\n};\n/**\nCreates an exact copy of the current color.\n*/\nColor.prototype.clone = function clone() {\n\tvar self = new Color(this.values.slice(), this.alpha, this.space);\n\n\tif (this.originalColor) {\n\t\tself.originalColor = this.originalColor.clone();\n\t}\n\n\treturn self;\n};\n/**\nFinds the nearest CSS4 color name within a given tolerance.\n\n@param {number} [tolerance=0] - The maximum distance between the current color\n\tand the css color, with distance being calculated as the the sum of the\n\tabsolute differences between each RGB channel.\n*/\nColor.prototype.toCss = function toCss(tolerance) {\n\ttolerance = tolerance || 0;\n\tvar selfRgb = this.convert('rgb').values;\n\n\treturn Object.keys(cssColors).map(function(name) {\n\t\treturn {\n\t\t\tname: name,\n\t\t\tdistance: distanceTo(name)\n\t\t};\n\t}).filter(function(value) {\n\t\treturn value.distance <= tolerance;\n\t}).reduce(function(out, value) {\n\t\tif (value.distance < out.distance) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn out;\n\t\t}\n\t}, {\n\t\tname: null, // Return value if no values after filter\n\t\tdistance: Infinity\n\t}).name;\n\n\tfunction distanceTo(name) {\n\t\treturn zipValues(cssColors[name], selfRgb).reduce(function(out, zip) {\n\t\t\treturn out + Math.abs(zip[0] - zip[1]);\n\t\t}, 0);\n\t}\n};\n/**\nFinds the nearest CSS4 color name. Identical to `#toCss(255)`.\n*/\nColor.prototype.toClosestCss = function toClosestCss() {\n\treturn this.toCss(255);\n};\n/**\nReturns a new color in the given space. The new color will have the\n`originalColor` property set, meaning subsequent conversions will be less\nlossy.\n\n@param {Color.spaces} space - The space in which to convert the color to\n*/\nColor.prototype.convert = function convert(space) {\n\tif (Color.spaces[space]) {\n\t\tif (this.space === space) {\n\t\t\treturn this.clone();\n\t\t} else if (this.originalColor) {\n\t\t\treturn this.originalColor.convert(space);\n\t\t} else {\n\t\t\tvar newValues = colorSpace[this.space][space](this.values);\n\n\t\t\tvar newColor = new Color(newValues, this.alpha, space);\n\t\t\tnewColor.originalColor = this.clone();\n\n\t\t\treturn newColor;\n\t\t}\n\t} else {\n\t\tthrow new Error('Invalid color space: ' + space);\n\t}\n};\n/*\nReturns a new color that is the result of mixing the current color with another\ncolor.\n\n@param {Color} other - The color\n@param {number} [amount=0.5] - The ratio of the color mix, with 0 being equal\n\tto the current color, and 1 being equal to the other color\n@param {Color.spaces} [mode='rgb'] - The space in which to perform the mix,\n\twith different spaces giving different outputs\n*/\nColor.prototype.mix = function mix(other, amountMode, mode) {\n\tvar amount;\n\n\tif (mode === undefined) {\n\t\tif (typeof amountMode === 'number') {\n\t\t\tamount = amountMode;\n\t\t} else if (typeof amountMode === 'string') {\n\t\t\tmode = amountMode;\n\t\t}\n\t} else {\n\t\tamount = amountMode;\n\t}\n\n\tif (amount === undefined) {\n\t\tamount = 0.5;\n\t}\n\n\tif (mode === undefined) {\n\t\tmode = 'rgb';\n\t}\n\n\tvar thisValues = this.convert(mode).values;\n\tvar otherValues = other.convert(mode).values;\n\n\tvar colorMode = colorSpace[mode];\n\n\tvar values = zipValues(thisValues, otherValues).map(function zippedValues(zip, index) {\n\t\tvar a = zip[0];\n\t\tvar b = zip[1];\n\n\t\tif (colorMode.channel[index] === 'hue') {\n\t\t\tvar value;\n\n\t\t\tif (Math.abs(a - b) <= 180) {\n\t\t\t\t// Clockwise (I guess?)\n\t\t\t\tvalue = a * (1 - amount) + b * amount;\n\t\t\t} else {\n\t\t\t\t// Anti-clockwise\n\t\t\t\tvalue = a * (1 - amount) - b * amount;\n\t\t\t}\n\n\t\t\tif (value < 0) {\n\t\t\t\treturn value + 360;\n\t\t\t} else if (value >= 360) {\n\t\t\t\treturn value - 360;\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn a * (1 - amount) + b * amount;\n\t\t}\n\t}).map(function(value, index) {\n\t\t// Clip values\n\t\tvar max = colorMode.max[index];\n\t\tvar min = colorMode.min[index];\n\n\t\treturn Math.min(max, Math.max(min, value));\n\t});\n\tvar alpha = this.alpha + (this.alpha - other.alpha) * amount;\n\n\treturn new Color(values, alpha, mode);\n};\n/**\nReturns a new color that is the result of lightening the current color.\n\n@param {number} [amount=0.1] - The amount to lighten by, between 0 and 1\n@param {Color.spaces} [mode='hsl'] - The space to use to lighten, which must\n\thave a lightness component\n*/\nColor.prototype.lighten = function lighten(amount, mode) {\n\tif (amount === undefined) {\n\t\tamount = 0.1;\n\t}\n\n\tif (mode === undefined) {\n\t\tmode = 'hsl';\n\t}\n\n\tvar colorMode = colorSpace[mode];\n\tvar index = colorMode.channel.indexOf('lightness');\n\n\tif (index !== -1) {\n\t\tvar newColor = this.convert(mode);\n\n\t\tvar min = colorMode.min[index];\n\t\tvar max = colorMode.max[index];\n\n\t\tvar brightness = newColor.values[index] + amount * (max - min);\n\t\t// Clip brightness to bounds\n\t\tnewColor.values[index] = Math.min(max, Math.max(min, brightness));\n\n\t\t// This will be wrong\n\t\tnewColor.originalColor = null;\n\n\t\treturn newColor.convert(this.space);\n\t} else {\n\t\tthrow new Error('Cannot lighten or darken with mode ' + mode);\n\t}\n};\n/**\nReturns a new color that is the result of darkening the current color.\n\n@param {number} [amount=0.1] - The amount to lighten by, between 0 and 1\n@param {Color.spaces} [mode='hsl'] - The space to use to lighten, which must\n\thave a lightness component\n*/\nColor.prototype.darken = function darken(amount, mode) {\n\tif (amount === undefined) {\n\t\tamount = 0.1; // Otherwise will be NaN in #lighten\n\t}\n\n\treturn this.lighten(-amount, mode);\n};\n/**\nMultiplies each RGB value by the specified amount. The alpha value remains\nunchanged.\n\n@param {number} value - The value to multiply each by\n*/\nColor.prototype.channelMultiply = function channelMultiply(value) {\n\tvar values = this.convert('rgb').values.map(function(channel) {\n\t\treturn Math.min(channel * value, 255);\n\t});\n\n\treturn new Color(values, this.alpha, 'rgb');\n};\n/**\nReturns a new color that is the result of adding the channels of the current\ncolor and another color. The resulting color has channels clipped at a maximum\nof 255, and an alpha equal to the square root of the sum of the squares of the\nalpha values clipped at one.\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.add = colorOperationFactory(function add(zip) {\n\treturn Math.min(zip[0] + zip[1], 255);\n}, addSubtractAlphaFn);\n/**\nReturns a new color that is the result of subtracting the channels of the\ncurrent color and another color. The resulting color has channels clipped at a\nminimum of 0, and an alpha equal to the square root of the sum of the squares\nof the alpha values clipped at one.\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.subtract = colorOperationFactory(function subtract(zip) {\n\treturn Math.max(zip[0] - zip[1], 0);\n}, addSubtractAlphaFn);\n/**\nReturns a new color that is the result of multiplying the channels of the\ncurrent color and another color.\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.multiply = colorOperationFactory(function multiply(zip) {\n\treturn zip[0] * zip[1] / 255;\n});\n/**\nReturns a new color that is the result of dividing the channels of the current\ncolor by the channels of another color. The resulting color has channels\nclipped at a maximum of 255.\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.divide = colorOperationFactory(function divide(zip) {\n\treturn Math.min(255 * zip[0] / zip[1], 255);\n});\n/**\nReturns a new color that is the result of the screen operation of the current\ncolor and another color. The equation used is 1 - (1 - a)(1 - b).\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.screen = colorOperationFactory(function screen(zip) {\n\treturn 255 - (255 - zip[0]) * (255 - zip[1]) / 255;\n});\n/**\nReturns a new color that is the result of the overlay operation of the current\ncolor and another color. The equation used is given as follows:\n\n\ta < 0.5    2ab\n\ta >= 0.5   1 - 2(1 - a)(1 - b).\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.overlay = colorOperationFactory(function overlay(zip) {\n\tif (zip[0] < 128) {\n\t\treturn 2 * zip[0] * zip[1] / 255;\n\t} else {\n\t\treturn 255 - 2 * (255 - zip[0]) * (255 - zip[1]) / 255;\n\t}\n});\n/**\nReturns a new color that is the result of the dodge operation of the current\ncolor and another color. The equation used is given as follows:\n\n\tb < 1    b / (1 - a)\n\tb = 1    1\n\nThe resulting color has channels clipped at a maximum of 255.\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.dodge = colorOperationFactory(function dodge(zip) {\n\tif (zip[0] < 255) {\n\t\treturn Math.min(255, (zip[1] * 255) / (255 - zip[0]));\n\t} else {\n\t\treturn 255;\n\t}\n});\n/**\nReturns a new color that is the result of the dodge operation of the current\ncolor and another color. The equation used is given as follows:\n\n\ta > 0    1 - (1 - b) / a\n\ta = 0    0\n\nThe resulting color has channels clipped at a maximum of 255.\n\n@function\n\n@param {Color} other - The other color used to perform the operation\n*/\nColor.prototype.burn = colorOperationFactory(function burn(zip) {\n\tif (zip[0] >= 0) {\n\t\treturn Math.max(0, 255 - 255 * (255 - zip[1]) / zip[0]);\n\t} else {\n\t\treturn 0;\n\t}\n});\n/**\nReturns a new color that is the result of raising each power to an exponent.\nThe resulting color has channels clipped at a maximum of 255.\n\n@function\n\n@param {number} power - The power to raise each channel by\n*/\nColor.prototype.exponent = function exponent(power) {\n\tvar values = this.convert('rgb').values.map(function(value) {\n\t\treturn Math.min(Math.pow(value / 255, power), 1) * 255;\n\t});\n\tvar alpha = Math.pow(this.alpha, power);\n\n\treturn new Color(values, alpha, 'rgb');\n};\n\n\n\n/**\nAvailable spaces for colors. Check`color-space` to ensure up-to-dateness. Note\nthat all these values exist on the Color object as a shorthand described in\n{@link ColorShorthand}.\n\n@readonly\n@enum\n\n@property {string} ciecam\n@property {string} cmy\n@property {string} cmyk\n@property {string} hsl\n@property {string} hsv\n@property {string} husl\n@property {string} huslp\n@property {string} hwb\n@property {string} lab\n@property {string} labh\n@property {string} lchab\n@property {string} lchuv\n@property {string} lms\n@property {string} luv\n@property {string} rgb\n@property {string} xyy\n@property {string} xyz\n*/\nColor.spaces = Object.freeze(Object.keys(colorSpace).reduce(function(out, name) {\n\tout[name] = name;\n\treturn out;\n}, {}));\n/**\n@memberof Color\n@member {ColorShorthand} ciecam\n*/\n/**\n@memberof Color\n@member {ColorShorthand} cmyk\n*/\n/**\n@memberof Color\n@member {ColorShorthand} cmy\n*/\n/**\n@memberof Color\n@member {ColorShorthand} rgb\n*/\n/**\n@memberof Color\n@member {ColorShorthand} hsl\n*/\n/**\n@memberof Color\n@member {ColorShorthand} hsv\n*/\n/**\n@memberof Color\n@member {ColorShorthand} husl\n*/\n/**\n@memberof Color\n@member {ColorShorthand} huslp\n*/\n/**\n@memberof Color\n@member {ColorShorthand} hwb\n*/\n/**\n@memberof Color\n@member {ColorShorthand} lab\n*/\n/**\n@memberof Color\n@member {ColorShorthand} labh\n*/\n/**\n@memberof Color\n@member {ColorShorthand} lchab\n*/\n/**\n@memberof Color\n@member {ColorShorthand} lchuv\n*/\n/**\n@memberof Color\n@member {ColorShorthand} lms\n*/\n/**\n@memberof Color\n@member {ColorShorthand} luv\n*/\n/**\n@memberof Color\n@member {ColorShorthand} rgb\n*/\n/**\n@memberof Color\n@member {ColorShorthand} xyy\n*/\n/**\n@memberof Color\n@member {ColorShorthand} xyz\n*/\n// Shorthand instantiation\nObject.keys(Color.spaces).forEach(function(space) {\n\tColor[space] = function(values, alpha) {\n\t\tif (alpha !== undefined) {\n\t\t\treturn new Color(values, alpha, space);\n\t\t} else {\n\t\t\treturn new Color(values, space);\n\t\t}\n\t};\n});\n/**\nShorthand for creation of a new color object using a hex value.\n\n@param {string} hex - A hex value with either 3, 4, 6, or 8 numbers, which can\n\toptionally be prefixed with a hash (#)\n*/\nColor.hex = function hex(string) {\n\tif (string[0] === '#') {\n\t\tstring = string.substr(1);\n\t}\n\n\tvar len = string.length;\n\tvar hasAlphaComponent = (len % 3 !== 0);\n\n\tif (!hasAlphaComponent && (len === 6 || len === 3)) {\n\t\tvar rgb = (function(string) {\n\n\t\t\tif (len === 3) {\n\t\t\t\treturn [string[0] + string[0], string[1] + string[1], string[2] + string[2]];\n\t\t\t} else if (len === 6) {\n\t\t\t\treturn [string.substr(0, 2), string.substr(2, 2), string.substr(4, 2)];\n\t\t\t}\n\t\t})(string).map(function(channelString) {\n\t\t\treturn parseInt(channelString, 16);\n\t\t});\n\n\t\treturn new Color(rgb, 'rgb');\n\t} else if (hasAlphaComponent && (len === 8 || len === 4)) {\n\t\tvar offset = len / 4;\n\t\tvar alphaMultiplicationFactor = (len === 4) ? 17 : 1;\n\n\t\tvar alpha = parseInt(string.substr(-offset), 16) * alphaMultiplicationFactor / 255;\n\t\tvar newColor = Color.hex(string.substr(0, len - offset));\n\t\tnewColor.alpha = alpha;\n\n\t\treturn newColor;\n\t} else {\n\t\tthrow new Error('Cannot convert from hex value ' + string);\n\t}\n};\n/**\nShorthand for creation of a new color object with a CSS4 color name.\n\n@param {string} name - CSS4 color name\n@param {number} [alpha = 1] - Alpha of the color\n*/\nColor.css = function css(string, alpha) {\n\tvar rgb = cssColors[string];\n\n\tif (alpha === undefined) {\n\t\talpha = 1;\n\t}\n\n\tif (rgb) {\n\t\treturn new Color(rgb, alpha);\n\t} else {\n\t\treturn null;\n\t}\n};\n\n\n\nfunction colorOperationFactory(operation, alphaFn) {\n\treturn function(other) {\n\t\tvar a = this.convert('rgb');\n\t\tvar b = other.convert('rgb');\n\n\t\tif (!alphaFn) {\n\t\t\talphaFn = function defaultAlphaFn(a, b) {\n\t\t\t\treturn operation([a * 255, b * 255]) / 255;\n\t\t\t};\n\t\t}\n\n\t\tvar aValues = a.values.map(function(value) {\n\t\t\treturn value * a.alpha;\n\t\t});\n\t\tvar bValues = b.values.map(function(value) {\n\t\t\treturn value * b.alpha;\n\t\t});\n\n\t\tvar values = zipValues(aValues, bValues).map(operation);\n\t\tvar alpha = alphaFn(a.alpha, b.alpha);\n\n\t\treturn new Color(values, alpha, 'rgb');\n\t};\n}\n\nfunction zipValues(a, b) {\n\tvar out = [];\n\n\tfor (var i = 0; i < a.length; i++) {\n\t\tout[i] = [a[i], b[i]];\n\t}\n\n\treturn out;\n}\n\nfunction hexDouble(value) {\n\tvar hex = value.toString(16);\n\n\tif (hex.length >= 2) {\n\t\treturn hex.substr(0, 2);\n\t} else {\n\t\treturn '0' + hex;\n\t}\n}\n\nfunction addSubtractAlphaFn(a, b) {\n\treturn Math.min(Math.sqrt(a * a + b * b), 1);\n}\n\n\n\nmodule.exports = Color;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\n\nvar rgb = require('./rgb');\n\nvar xyz = module.exports = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tmax: [96,100,109],\n\tchannel: ['lightness','u','v'],\n\talias: ['ciexyz'],\n\n\t//whitepoint with observer/illuminant\n\t// http://en.wikipedia.org/wiki/Standard_illuminant\n\twhitepoint: {\n\t\t2: {\n\t\t\t//incadescent\n\t\t\tA:[109.85, 100, 35.585],\n\t\t\t// B:[],\n\t\t\tC: [98.074, 100, 118.232],\n\t\t\tD50: [96.422, 100, 82.521],\n\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t//daylight\n\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t//flourescent\n\t\t\t// F1: [],\n\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t// F3: [],\n\t\t\t// F4: [],\n\t\t\t// F5: [],\n\t\t\t// F6:[],\n\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t// F8: [],\n\t\t\t// F9: [],\n\t\t\t// F10: [],\n\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t// F12: [],\n\t\t\tE: [100,100,100]\n\t\t},\n\n\t\t10: {\n\t\t\t//incadescent\n\t\t\tA:[111.144, 100, 35.200],\n\t\t\tC: [97.285, 100, 116.145],\n\t\t\tD50: [96.720, 100, 81.427],\n\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t//daylight\n\t\t\tD65: [94.811, 100, 107.304],\n\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t//flourescent\n\t\t\tF2: [103.280, 100, 69.026],\n\t\t\tF7: [95.792, 100, 107.687],\n\t\t\tF11: [103.866, 100, 65.627],\n\t\t\tE: [100,100,100]\n\t\t}\n\t},\n\n\trgb: function(xyz) {\n\t\tvar x = xyz[0] / 100,\n\t\t\t\ty = xyz[1] / 100,\n\t\t\t\tz = xyz[2] / 100,\n\t\t\t\tr, g, b;\n\n\t\t// assume sRGB\n\t\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\t\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\t\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\t\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t\t: r = (r * 12.92);\n\n\t\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t\t: g = (g * 12.92);\n\n\t\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t\t: b = (b * 12.92);\n\n\t\tr = Math.min(Math.max(0, r), 1);\n\t\tg = Math.min(Math.max(0, g), 1);\n\t\tb = Math.min(Math.max(0, b), 1);\n\n\t\treturn [r * 255, g * 255, b * 255];\n\t}\n};\n\n\n//extend rgb\nrgb.xyz = function(rgb) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\treturn [x * 100, y *100, z * 100];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/xyz.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nmodule.exports = {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue']\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/rgb.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * @module color-space/hsl\n */\n\nvar rgb = require('./rgb');\n\nmodule.exports = {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0] / 360,\n\t\t\t\ts = hsl[1] / 100,\n\t\t\t\tl = hsl[2] / 100,\n\t\t\t\tt1, t2, t3, rgb, val;\n\n\t\tif (s === 0) {\n\t\t\tval = l * 255;\n\t\t\treturn [val, val, val];\n\t\t}\n\n\t\tif (l < 0.5) {\n\t\t\tt2 = l * (1 + s);\n\t\t}\n\t\telse {\n\t\t\tt2 = l + s - l * s;\n\t\t}\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tif (t3 < 0) {\n\t\t\t\tt3++;\n\t\t\t}\n\t\t\telse if (t3 > 1) {\n\t\t\t\tt3--;\n\t\t\t}\n\n\t\t\tif (6 * t3 < 1) {\n\t\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t\t}\n\t\t\telse if (2 * t3 < 1) {\n\t\t\t\tval = t2;\n\t\t\t}\n\t\t\telse if (3 * t3 < 2) {\n\t\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tval = t1;\n\t\t\t}\n\n\t\t\trgb[i] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/hsl.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\n\nvar luv = require('./luv');\nvar xyz = require('./xyz');\n\n//cylindrical luv\nvar lchuv = module.exports = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t},\n};\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/lchuv.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * @module color-space/hsv\n */\n\nvar rgb = require('./rgb');\nvar hsl = require('./hsl');\n\nmodule.exports = {\n\tname: 'hsv',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'value'],\n\talias: ['hsb'],\n\n\trgb: function(hsv) {\n\t\tvar h = hsv[0] / 60,\n\t\t\t\ts = hsv[1] / 100,\n\t\t\t\tv = hsv[2] / 100,\n\t\t\t\thi = Math.floor(h) % 6;\n\n\t\tvar f = h - Math.floor(h),\n\t\t\t\tp = 255 * v * (1 - s),\n\t\t\t\tq = 255 * v * (1 - (s * f)),\n\t\t\t\tt = 255 * v * (1 - (s * (1 - f)));\n\t\tv *= 255;\n\n\t\tswitch(hi) {\n\t\t\tcase 0:\n\t\t\t\treturn [v, t, p];\n\t\t\tcase 1:\n\t\t\t\treturn [q, v, p];\n\t\t\tcase 2:\n\t\t\t\treturn [p, v, t];\n\t\t\tcase 3:\n\t\t\t\treturn [p, q, v];\n\t\t\tcase 4:\n\t\t\t\treturn [t, p, v];\n\t\t\tcase 5:\n\t\t\t\treturn [v, p, q];\n\t\t}\n\t},\n\n\thsl: function(hsv) {\n\t\tvar h = hsv[0],\n\t\t\ts = hsv[1] / 100,\n\t\t\tv = hsv[2] / 100,\n\t\t\tsl, l;\n\n\t\tl = (2 - s) * v;\n\t\tsl = s * v;\n\t\tsl /= (l <= 1) ? l : 2 - l;\n\t\tsl = sl || 0;\n\t\tl /= 2;\n\n\t\treturn [h, sl * 100, l * 100];\n\t}\n};\n\n\n//append rgb\nrgb.hsv = function(rgb) {\n\tvar r = rgb[0],\n\t\t\tg = rgb[1],\n\t\t\tb = rgb[2],\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t}\n\telse {\n\t\ts = (delta/max * 1000)/10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\n\n\n//extend hsl\nhsl.hsv = function(hsl) {\n\tvar h = hsl[0],\n\t\t\ts = hsl[1] / 100,\n\t\t\tl = hsl[2] / 100,\n\t\t\tsv, v;\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tv = (l + s) / 2;\n\tsv = (2 * s) / (l + s) || 0;\n\n\treturn [h, sv * 100, v * 100];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/hsv.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * CIE LAB space model\n *\n * @module color-space/lab\n */\n\nvar xyz = require('./xyz');\n\nmodule.exports = {\n\tname: 'lab',\n\tmin: [0,-100,-100],\n\tmax: [100,100,100],\n\tchannel: ['lightness', 'a', 'b'],\n\talias: ['cielab'],\n\n\txyz: function(lab) {\n\t\tvar l = lab[0],\n\t\t\t\ta = lab[1],\n\t\t\t\tb = lab[2],\n\t\t\t\tx, y, z, y2;\n\n\t\tif (l <= 8) {\n\t\t\ty = (l * 100) / 903.3;\n\t\t\ty2 = (7.787 * (y / 100)) + (16 / 116);\n\t\t} else {\n\t\t\ty = 100 * Math.pow((l + 16) / 116, 3);\n\t\t\ty2 = Math.pow(y / 100, 1/3);\n\t\t}\n\n\t\tx = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n\t\tz = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n\n//extend xyz\nxyz.lab = function(xyz){\n\tvar x = xyz[0],\n\t\t\ty = xyz[1],\n\t\t\tz = xyz[2],\n\t\t\tl, a, b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/lab.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n\nvar xyz = require('./xyz');\n\nmodule.exports = {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['cieluv'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\tvar e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/luv.js\n ** module id = 7\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.9.1\n(function() {\n  var L_to_Y, Y_to_L, conv, distanceFromPole, dotProduct, epsilon, fromLinear, getBounds, intersectLineLine, kappa, lengthOfRayUntilIntersect, m, m_inv, maxChromaForLH, maxSafeChromaForL, refU, refV, refX, refY, refZ, rgbPrepare, root, round, toLinear;\n\n  m = {\n    R: [3.240969941904521, -1.537383177570093, -0.498610760293],\n    G: [-0.96924363628087, 1.87596750150772, 0.041555057407175],\n    B: [0.055630079696993, -0.20397695888897, 1.056971514242878]\n  };\n\n  m_inv = {\n    X: [0.41239079926595, 0.35758433938387, 0.18048078840183],\n    Y: [0.21263900587151, 0.71516867876775, 0.072192315360733],\n    Z: [0.019330818715591, 0.11919477979462, 0.95053215224966]\n  };\n\n  refX = 0.95045592705167;\n\n  refY = 1.0;\n\n  refZ = 1.089057750759878;\n\n  refU = 0.19783000664283;\n\n  refV = 0.46831999493879;\n\n  kappa = 903.2962962;\n\n  epsilon = 0.0088564516;\n\n  getBounds = function(L) {\n    var bottom, channel, j, k, len1, len2, m1, m2, m3, ref, ref1, ref2, ret, sub1, sub2, t, top1, top2;\n    sub1 = Math.pow(L + 16, 3) / 1560896;\n    sub2 = sub1 > epsilon ? sub1 : L / kappa;\n    ret = [];\n    ref = ['R', 'G', 'B'];\n    for (j = 0, len1 = ref.length; j < len1; j++) {\n      channel = ref[j];\n      ref1 = m[channel], m1 = ref1[0], m2 = ref1[1], m3 = ref1[2];\n      ref2 = [0, 1];\n      for (k = 0, len2 = ref2.length; k < len2; k++) {\n        t = ref2[k];\n        top1 = (284517 * m1 - 94839 * m3) * sub2;\n        top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n        bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n        ret.push([top1 / bottom, top2 / bottom]);\n      }\n    }\n    return ret;\n  };\n\n  intersectLineLine = function(line1, line2) {\n    return (line1[1] - line2[1]) / (line2[0] - line1[0]);\n  };\n\n  distanceFromPole = function(point) {\n    return Math.sqrt(Math.pow(point[0], 2) + Math.pow(point[1], 2));\n  };\n\n  lengthOfRayUntilIntersect = function(theta, line) {\n    var b1, len, m1;\n    m1 = line[0], b1 = line[1];\n    len = b1 / (Math.sin(theta) - m1 * Math.cos(theta));\n    if (len < 0) {\n      return null;\n    }\n    return len;\n  };\n\n  maxSafeChromaForL = function(L) {\n    var b1, j, len1, lengths, m1, ref, ref1, x;\n    lengths = [];\n    ref = getBounds(L);\n    for (j = 0, len1 = ref.length; j < len1; j++) {\n      ref1 = ref[j], m1 = ref1[0], b1 = ref1[1];\n      x = intersectLineLine([m1, b1], [-1 / m1, 0]);\n      lengths.push(distanceFromPole([x, b1 + x * m1]));\n    }\n    return Math.min.apply(Math, lengths);\n  };\n\n  maxChromaForLH = function(L, H) {\n    var hrad, j, l, len1, lengths, line, ref;\n    hrad = H / 360 * Math.PI * 2;\n    lengths = [];\n    ref = getBounds(L);\n    for (j = 0, len1 = ref.length; j < len1; j++) {\n      line = ref[j];\n      l = lengthOfRayUntilIntersect(hrad, line);\n      if (l !== null) {\n        lengths.push(l);\n      }\n    }\n    return Math.min.apply(Math, lengths);\n  };\n\n  dotProduct = function(a, b) {\n    var i, j, ref, ret;\n    ret = 0;\n    for (i = j = 0, ref = a.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n      ret += a[i] * b[i];\n    }\n    return ret;\n  };\n\n  round = function(num, places) {\n    var n;\n    n = Math.pow(10, places);\n    return Math.round(num * n) / n;\n  };\n\n  fromLinear = function(c) {\n    if (c <= 0.0031308) {\n      return 12.92 * c;\n    } else {\n      return 1.055 * Math.pow(c, 1 / 2.4) - 0.055;\n    }\n  };\n\n  toLinear = function(c) {\n    var a;\n    a = 0.055;\n    if (c > 0.04045) {\n      return Math.pow((c + a) / (1 + a), 2.4);\n    } else {\n      return c / 12.92;\n    }\n  };\n\n  rgbPrepare = function(tuple) {\n    var ch, j, k, len1, len2, n, results;\n    tuple = (function() {\n      var j, len1, results;\n      results = [];\n      for (j = 0, len1 = tuple.length; j < len1; j++) {\n        n = tuple[j];\n        results.push(round(n, 3));\n      }\n      return results;\n    })();\n    for (j = 0, len1 = tuple.length; j < len1; j++) {\n      ch = tuple[j];\n      if (ch < -0.0001 || ch > 1.0001) {\n        throw new Error(\"Illegal rgb value: \" + ch);\n      }\n      if (ch < 0) {\n        ch = 0;\n      }\n      if (ch > 1) {\n        ch = 1;\n      }\n    }\n    results = [];\n    for (k = 0, len2 = tuple.length; k < len2; k++) {\n      ch = tuple[k];\n      results.push(Math.round(ch * 255));\n    }\n    return results;\n  };\n\n  conv = {\n    'xyz': {},\n    'luv': {},\n    'lch': {},\n    'husl': {},\n    'huslp': {},\n    'rgb': {},\n    'hex': {}\n  };\n\n  conv.xyz.rgb = function(tuple) {\n    var B, G, R;\n    R = fromLinear(dotProduct(m.R, tuple));\n    G = fromLinear(dotProduct(m.G, tuple));\n    B = fromLinear(dotProduct(m.B, tuple));\n    return [R, G, B];\n  };\n\n  conv.rgb.xyz = function(tuple) {\n    var B, G, R, X, Y, Z, rgbl;\n    R = tuple[0], G = tuple[1], B = tuple[2];\n    rgbl = [toLinear(R), toLinear(G), toLinear(B)];\n    X = dotProduct(m_inv.X, rgbl);\n    Y = dotProduct(m_inv.Y, rgbl);\n    Z = dotProduct(m_inv.Z, rgbl);\n    return [X, Y, Z];\n  };\n\n  Y_to_L = function(Y) {\n    if (Y <= epsilon) {\n      return (Y / refY) * kappa;\n    } else {\n      return 116 * Math.pow(Y / refY, 1 / 3) - 16;\n    }\n  };\n\n  L_to_Y = function(L) {\n    if (L <= 8) {\n      return refY * L / kappa;\n    } else {\n      return refY * Math.pow((L + 16) / 116, 3);\n    }\n  };\n\n  conv.xyz.luv = function(tuple) {\n    var L, U, V, X, Y, Z, varU, varV;\n    X = tuple[0], Y = tuple[1], Z = tuple[2];\n    varU = (4 * X) / (X + (15 * Y) + (3 * Z));\n    varV = (9 * Y) / (X + (15 * Y) + (3 * Z));\n    L = Y_to_L(Y);\n    if (L === 0) {\n      return [0, 0, 0];\n    }\n    U = 13 * L * (varU - refU);\n    V = 13 * L * (varV - refV);\n    return [L, U, V];\n  };\n\n  conv.luv.xyz = function(tuple) {\n    var L, U, V, X, Y, Z, varU, varV;\n    L = tuple[0], U = tuple[1], V = tuple[2];\n    if (L === 0) {\n      return [0, 0, 0];\n    }\n    varU = U / (13 * L) + refU;\n    varV = V / (13 * L) + refV;\n    Y = L_to_Y(L);\n    X = 0 - (9 * Y * varU) / ((varU - 4) * varV - varU * varV);\n    Z = (9 * Y - (15 * varV * Y) - (varV * X)) / (3 * varV);\n    return [X, Y, Z];\n  };\n\n  conv.luv.lch = function(tuple) {\n    var C, H, Hrad, L, U, V;\n    L = tuple[0], U = tuple[1], V = tuple[2];\n    C = Math.pow(Math.pow(U, 2) + Math.pow(V, 2), 1 / 2);\n    Hrad = Math.atan2(V, U);\n    H = Hrad * 360 / 2 / Math.PI;\n    if (H < 0) {\n      H = 360 + H;\n    }\n    return [L, C, H];\n  };\n\n  conv.lch.luv = function(tuple) {\n    var C, H, Hrad, L, U, V;\n    L = tuple[0], C = tuple[1], H = tuple[2];\n    Hrad = H / 360 * 2 * Math.PI;\n    U = Math.cos(Hrad) * C;\n    V = Math.sin(Hrad) * C;\n    return [L, U, V];\n  };\n\n  conv.husl.lch = function(tuple) {\n    var C, H, L, S, max;\n    H = tuple[0], S = tuple[1], L = tuple[2];\n    if (L > 99.9999999) {\n      return [100, 0, H];\n    }\n    if (L < 0.00000001) {\n      return [0, 0, H];\n    }\n    max = maxChromaForLH(L, H);\n    C = max / 100 * S;\n    return [L, C, H];\n  };\n\n  conv.lch.husl = function(tuple) {\n    var C, H, L, S, max;\n    L = tuple[0], C = tuple[1], H = tuple[2];\n    if (L > 99.9999999) {\n      return [H, 0, 100];\n    }\n    if (L < 0.00000001) {\n      return [H, 0, 0];\n    }\n    max = maxChromaForLH(L, H);\n    S = C / max * 100;\n    return [H, S, L];\n  };\n\n  conv.huslp.lch = function(tuple) {\n    var C, H, L, S, max;\n    H = tuple[0], S = tuple[1], L = tuple[2];\n    if (L > 99.9999999) {\n      return [100, 0, H];\n    }\n    if (L < 0.00000001) {\n      return [0, 0, H];\n    }\n    max = maxSafeChromaForL(L);\n    C = max / 100 * S;\n    return [L, C, H];\n  };\n\n  conv.lch.huslp = function(tuple) {\n    var C, H, L, S, max;\n    L = tuple[0], C = tuple[1], H = tuple[2];\n    if (L > 99.9999999) {\n      return [H, 0, 100];\n    }\n    if (L < 0.00000001) {\n      return [H, 0, 0];\n    }\n    max = maxSafeChromaForL(L);\n    S = C / max * 100;\n    return [H, S, L];\n  };\n\n  conv.rgb.hex = function(tuple) {\n    var ch, hex, j, len1;\n    hex = \"#\";\n    tuple = rgbPrepare(tuple);\n    for (j = 0, len1 = tuple.length; j < len1; j++) {\n      ch = tuple[j];\n      ch = ch.toString(16);\n      if (ch.length === 1) {\n        ch = \"0\" + ch;\n      }\n      hex += ch;\n    }\n    return hex;\n  };\n\n  conv.hex.rgb = function(hex) {\n    var b, g, j, len1, n, r, ref, results;\n    if (hex.charAt(0) === \"#\") {\n      hex = hex.substring(1, 7);\n    }\n    r = hex.substring(0, 2);\n    g = hex.substring(2, 4);\n    b = hex.substring(4, 6);\n    ref = [r, g, b];\n    results = [];\n    for (j = 0, len1 = ref.length; j < len1; j++) {\n      n = ref[j];\n      results.push(parseInt(n, 16) / 255);\n    }\n    return results;\n  };\n\n  conv.lch.rgb = function(tuple) {\n    return conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(tuple)));\n  };\n\n  conv.rgb.lch = function(tuple) {\n    return conv.luv.lch(conv.xyz.luv(conv.rgb.xyz(tuple)));\n  };\n\n  conv.husl.rgb = function(tuple) {\n    return conv.lch.rgb(conv.husl.lch(tuple));\n  };\n\n  conv.rgb.husl = function(tuple) {\n    return conv.lch.husl(conv.rgb.lch(tuple));\n  };\n\n  conv.huslp.rgb = function(tuple) {\n    return conv.lch.rgb(conv.huslp.lch(tuple));\n  };\n\n  conv.rgb.huslp = function(tuple) {\n    return conv.lch.huslp(conv.rgb.lch(tuple));\n  };\n\n  root = {};\n\n  root.fromRGB = function(R, G, B) {\n    return conv.rgb.husl([R, G, B]);\n  };\n\n  root.fromHex = function(hex) {\n    return conv.rgb.husl(conv.hex.rgb(hex));\n  };\n\n  root.toRGB = function(H, S, L) {\n    return conv.husl.rgb([H, S, L]);\n  };\n\n  root.toHex = function(H, S, L) {\n    return conv.rgb.hex(conv.husl.rgb([H, S, L]));\n  };\n\n  root.p = {};\n\n  root.p.toRGB = function(H, S, L) {\n    return conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(conv.huslp.lch([H, S, L]))));\n  };\n\n  root.p.toHex = function(H, S, L) {\n    return conv.rgb.hex(conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(conv.huslp.lch([H, S, L])))));\n  };\n\n  root.p.fromRGB = function(R, G, B) {\n    return conv.lch.huslp(conv.luv.lch(conv.xyz.luv(conv.rgb.xyz([R, G, B]))));\n  };\n\n  root.p.fromHex = function(hex) {\n    return conv.lch.huslp(conv.luv.lch(conv.xyz.luv(conv.rgb.xyz(conv.hex.rgb(hex)))));\n  };\n\n  root._conv = conv;\n\n  root._round = round;\n\n  root._rgbPrepare = rgbPrepare;\n\n  root._getBounds = getBounds;\n\n  root._maxChromaForLH = maxChromaForLH;\n\n  root._maxSafeChromaForL = maxSafeChromaForL;\n\n  if (!((typeof module !== \"undefined\" && module !== null) || (typeof jQuery !== \"undefined\" && jQuery !== null) || (typeof requirejs !== \"undefined\" && requirejs !== null))) {\n    this.HUSL = root;\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = root;\n  }\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.husl = root;\n  }\n\n  if ((typeof requirejs !== \"undefined\" && requirejs !== null) && (typeof define !== \"undefined\" && define !== null)) {\n    define(root);\n  }\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/~/husl/husl.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * @module color-space/cmyk\n */\n\nvar rgb = require('./rgb');\n\nmodule.exports = {\n\tname: 'cmyk',\n\tmin: [0,0,0,0],\n\tmax: [100,100,100,100],\n\tchannel: ['cyan', 'magenta', 'yellow', 'black'],\n\n\trgb: function(cmyk) {\n\t\tvar c = cmyk[0] / 100,\n\t\t\t\tm = cmyk[1] / 100,\n\t\t\t\ty = cmyk[2] / 100,\n\t\t\t\tk = cmyk[3] / 100,\n\t\t\t\tr, g, b;\n\n\t\tr = 1 - Math.min(1, c * (1 - k) + k);\n\t\tg = 1 - Math.min(1, m * (1 - k) + k);\n\t\tb = 1 - Math.min(1, y * (1 - k) + k);\n\t\treturn [r * 255, g * 255, b * 255];\n\t}\n};\n\n\n//extend rgb\nrgb.cmyk = function(rgb) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255,\n\t\t\tc, m, y, k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/cmyk.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * A uniform wrapper for husl.\n * // http://www.boronine.com/husl/\n *\n * @module color-space/husl\n */\n\nvar xyz = require('./xyz');\nvar lchuv = require('./lchuv');\nvar _husl = require('husl');\n\n\nmodule.exports = {\n\tname: 'husl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\n\tlchuv: _husl._conv.husl.lch,\n\n\txyz: function(arg){\n\t\treturn lchuv.xyz(_husl._conv.husl.lch(arg));\n\t},\n\n\t//a shorter way to convert to huslp\n\thuslp: function(arg){\n\t\treturn _husl._conv.lch.huslp( _husl._conv.husl.lch(arg));\n\t}\n};\n\n//extend lchuv, xyz\nlchuv.husl = _husl._conv.lch.husl;\nxyz.husl = function(arg){\n\treturn _husl._conv.lch.husl(xyz.lchuv(arg));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/husl.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * A uniform wrapper for huslp.\n * // http://www.boronine.com/husl/\n *\n * @module color-space/huslp\n */\n\nvar xyz = require('./xyz');\nvar lchuv = require('./lchuv');\nvar _husl = require('husl');\n\nmodule.exports = {\n\tname: 'huslp',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\n\tlchuv: _husl._conv.huslp.lch,\n\txyz: function(arg){return lchuv.xyz(_husl._conv.huslp.lch(arg));},\n\n\t//a shorter way to convert to husl\n\thusl: function(arg){\n\t\treturn _husl._conv.lch.husl( _husl._conv.huslp.lch(arg));\n\t}\n};\n\n//extend lchuv, xyz\nlchuv.huslp = _husl._conv.lch.huslp;\nxyz.huslp = function(arg){return _husl._conv.lch.huslp(xyz.lchuv(arg));};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/huslp.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * @module color-space/hwb\n */\n\nvar rgb = require('./rgb');\nvar hsv = require('./hsv');\nvar hsl = require('./hsl');\n\n\nvar hwb = module.exports = {\n\tname: 'hwb',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'whiteness', 'blackness'],\n\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\trgb: function(hwb) {\n\t\tvar h = hwb[0] / 360,\n\t\t\twh = hwb[1] / 100,\n\t\t\tbl = hwb[2] / 100,\n\t\t\tratio = wh + bl,\n\t\t\ti, v, f, n;\n\n\t\tvar r, g, b;\n\n\t\t// wh + bl cant be > 1\n\t\tif (ratio > 1) {\n\t\t\twh /= ratio;\n\t\t\tbl /= ratio;\n\t\t}\n\n\t\ti = Math.floor(6 * h);\n\t\tv = 1 - bl;\n\t\tf = 6 * h - i;\n\n\t\t//if it is even\n\t\tif ((i & 0x01) !== 0) {\n\t\t\tf = 1 - f;\n\t\t}\n\n\t\tn = wh + f * (v - wh);  // linear interpolation\n\n\t\tswitch (i) {\n\t\t\tdefault:\n\t\t\tcase 6:\n\t\t\tcase 0: r = v; g = n; b = wh; break;\n\t\t\tcase 1: r = n; g = v; b = wh; break;\n\t\t\tcase 2: r = wh; g = v; b = n; break;\n\t\t\tcase 3: r = wh; g = n; b = v; break;\n\t\t\tcase 4: r = n; g = wh; b = v; break;\n\t\t\tcase 5: r = v; g = wh; b = n; break;\n\t\t}\n\n\t\treturn [r * 255, g * 255, b * 255];\n\t},\n\n\n\t// http://alvyray.com/Papers/CG/HWB_JGTv208.pdf\n\thsv: function(arg){\n\t\tvar h = arg[0], w = arg[1], b = arg[2], s, v;\n\n\t\t//if w+b > 100% - take proportion (how many times )\n\t\tif (w + b >= 100){\n\t\t\ts = 0;\n\t\t\tv = 100 * w/(w+b);\n\t\t}\n\n\t\t//by default - take wiki formula\n\t\telse {\n\t\t\ts = 100-(w/(1-b/100));\n\t\t\tv = 100-b;\n\t\t}\n\n\n\t\treturn [h, s, v];\n\t},\n\n\thsl: function(arg){\n\t\treturn hsv.hsl(hwb.hsv(arg));\n\t}\n};\n\n\n//extend rgb\nrgb.hwb = function(val) {\n\tvar r = val[0],\n\t\t\tg = val[1],\n\t\t\tb = val[2],\n\t\t\th = rgb.hsl(val)[0],\n\t\t\tw = 1/255 * Math.min(r, Math.min(g, b));\n\n\t\t\tb = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\n\n\n//keep proper hue on 0 values (conversion to rgb loses hue on zero-lightness)\nhsv.hwb = function(arg){\n\tvar h = arg[0], s = arg[1], v = arg[2];\n\treturn [h, v === 0 ? 0 : (v * (1-s/100)), 100 - v];\n};\n\n\n//extend hsl with proper conversions\nhsl.hwb = function(arg){\n\treturn hsv.hwb(hsl.hsv(arg));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/hwb.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * @module color-space\n *\n * @todo  to-source method, preparing the code for webworker\n * @todo  implement all side spaces from http://en.wikipedia.org/wiki/Category:Color_space yuv, yiq etc.\n * @todo  here are additional spaces http://www.jentronics.com/color.html ITU, REC709, SMTPE, NTSC, GREY\n *\n * @todo implement asm-js way to convert spaces (promises to be times faster)\n *\n */\n\nvar addConvertor = require('./util/add-convertor');\n\n\n/** Exported spaces */\nvar spaces = {\n\trgb: require('./rgb'),\n\thsl: require('./hsl'),\n\thsv: require('./hsv'),\n\thwb: require('./hwb'),\n\tcmyk: require('./cmyk'),\n\txyz: require('./xyz'),\n\tlab: require('./lab'),\n\tlchab: require('./lchab'),\n\tluv: require('./luv'),\n\tlchuv: require('./lchuv'),\n\thusl: require('./husl'),\n\thuslp: require('./huslp')\n};\n\n\n\n//build absent convertors from each to every space\nvar fromSpace, toSpace;\nfor (var fromSpaceName in spaces) {\n\tfromSpace = spaces[fromSpaceName];\n\tfor (var toSpaceName in spaces) {\n\t\tif (toSpaceName !== fromSpaceName) {\n\t\t\ttoSpace = spaces[toSpaceName];\n\t\t\taddConvertor(fromSpace, toSpace);\n\t\t}\n\t}\n}\n\n\nmodule.exports = spaces;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/index.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Cylindrical LAB\n *\n * @module color-space/lchab\n */\n\nvar xyz = require('./xyz');\nvar lab = require('./lab');\n\n\n//cylindrical lab\nvar lchab = module.exports = {\n\tname: 'lchab',\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['cielch', 'lch'],\n\n\txyz: function(arg) {\n\t\treturn lab.xyz(lchab.lab(arg));\n\t},\n\n\tlab: function(lch) {\n\t\tvar l = lch[0],\n\t\t\t\tc = lch[1],\n\t\t\t\th = lch[2],\n\t\t\t\ta, b, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\ta = c * Math.cos(hr);\n\t\tb = c * Math.sin(hr);\n\t\treturn [l, a, b];\n\t}\n};\n\n\n//extend lab\nlab.lchab = function(lab) {\n\tvar l = lab[0],\n\t\t\ta = lab[1],\n\t\t\tb = lab[2],\n\t\t\thr, h, c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\tc = Math.sqrt(a * a + b * b);\n\treturn [l, c, h];\n};\n\nxyz.lchab = function(arg){\n\treturn lab.lchab(xyz.lab(arg));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/lchab.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\r\n * Add a convertor from one to another space via XYZ or RGB space as a medium.\r\n *\r\n * @module  color-space/add-convertor\r\n */\r\n\r\nvar xyz = require('../xyz');\r\nvar rgb = require('../rgb');\r\n\r\nmodule.exports = addConvertor;\r\n\r\n\r\n/**\r\n * Add convertor from space A to space B.\r\n * So space A will be able to transform to B.\r\n */\r\nfunction addConvertor(fromSpace, toSpace){\r\n\tif (!fromSpace[toSpace.name]) {\r\n\t\tfromSpace[toSpace.name] = getConvertor(fromSpace, toSpace);\r\n\t}\r\n\r\n\treturn fromSpace;\r\n}\r\n\r\n\r\n/** return converter through xyz/rgb space */\r\nfunction getConvertor(fromSpace, toSpace){\r\n\tvar toSpaceName = toSpace.name;\r\n\r\n\t//create xyz converter, if available\r\n\tif (fromSpace.xyz && xyz[toSpaceName]) {\r\n\t\treturn function(arg){\r\n\t\t\treturn xyz[toSpaceName](fromSpace.xyz(arg));\r\n\t\t};\r\n\t}\r\n\t//create rgb converter\r\n\telse if (fromSpace.rgb && rgb[toSpaceName]) {\r\n\t\treturn function(arg){\r\n\t\t\treturn rgb[toSpaceName](fromSpace.rgb(arg));\r\n\t\t};\r\n\t}\r\n\r\n\tthrow Error('Can’t add convertor from ' + fromSpace.name + ' to ' + toSpaceName);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/color-space/util/add-convertor.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = {\n\t\"aliceblue\": [\n\t\t240,\n\t\t248,\n\t\t255\n\t],\n\t\"antiquewhite\": [\n\t\t250,\n\t\t235,\n\t\t215\n\t],\n\t\"aqua\": [\n\t\t0,\n\t\t255,\n\t\t255\n\t],\n\t\"aquamarine\": [\n\t\t127,\n\t\t255,\n\t\t212\n\t],\n\t\"azure\": [\n\t\t240,\n\t\t255,\n\t\t255\n\t],\n\t\"beige\": [\n\t\t245,\n\t\t245,\n\t\t220\n\t],\n\t\"bisque\": [\n\t\t255,\n\t\t228,\n\t\t196\n\t],\n\t\"black\": [\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t\"blanchedalmond\": [\n\t\t255,\n\t\t235,\n\t\t205\n\t],\n\t\"blue\": [\n\t\t0,\n\t\t0,\n\t\t255\n\t],\n\t\"blueviolet\": [\n\t\t138,\n\t\t43,\n\t\t226\n\t],\n\t\"brown\": [\n\t\t165,\n\t\t42,\n\t\t42\n\t],\n\t\"burlywood\": [\n\t\t222,\n\t\t184,\n\t\t135\n\t],\n\t\"cadetblue\": [\n\t\t95,\n\t\t158,\n\t\t160\n\t],\n\t\"chartreuse\": [\n\t\t127,\n\t\t255,\n\t\t0\n\t],\n\t\"chocolate\": [\n\t\t210,\n\t\t105,\n\t\t30\n\t],\n\t\"coral\": [\n\t\t255,\n\t\t127,\n\t\t80\n\t],\n\t\"cornflowerblue\": [\n\t\t100,\n\t\t149,\n\t\t237\n\t],\n\t\"cornsilk\": [\n\t\t255,\n\t\t248,\n\t\t220\n\t],\n\t\"crimson\": [\n\t\t220,\n\t\t20,\n\t\t60\n\t],\n\t\"cyan\": [\n\t\t0,\n\t\t255,\n\t\t255\n\t],\n\t\"darkblue\": [\n\t\t0,\n\t\t0,\n\t\t139\n\t],\n\t\"darkcyan\": [\n\t\t0,\n\t\t139,\n\t\t139\n\t],\n\t\"darkgoldenrod\": [\n\t\t184,\n\t\t134,\n\t\t11\n\t],\n\t\"darkgray\": [\n\t\t169,\n\t\t169,\n\t\t169\n\t],\n\t\"darkgreen\": [\n\t\t0,\n\t\t100,\n\t\t0\n\t],\n\t\"darkgrey\": [\n\t\t169,\n\t\t169,\n\t\t169\n\t],\n\t\"darkkhaki\": [\n\t\t189,\n\t\t183,\n\t\t107\n\t],\n\t\"darkmagenta\": [\n\t\t139,\n\t\t0,\n\t\t139\n\t],\n\t\"darkolivegreen\": [\n\t\t85,\n\t\t107,\n\t\t47\n\t],\n\t\"darkorange\": [\n\t\t255,\n\t\t140,\n\t\t0\n\t],\n\t\"darkorchid\": [\n\t\t153,\n\t\t50,\n\t\t204\n\t],\n\t\"darkred\": [\n\t\t139,\n\t\t0,\n\t\t0\n\t],\n\t\"darksalmon\": [\n\t\t233,\n\t\t150,\n\t\t122\n\t],\n\t\"darkseagreen\": [\n\t\t143,\n\t\t188,\n\t\t143\n\t],\n\t\"darkslateblue\": [\n\t\t72,\n\t\t61,\n\t\t139\n\t],\n\t\"darkslategray\": [\n\t\t47,\n\t\t79,\n\t\t79\n\t],\n\t\"darkslategrey\": [\n\t\t47,\n\t\t79,\n\t\t79\n\t],\n\t\"darkturquoise\": [\n\t\t0,\n\t\t206,\n\t\t209\n\t],\n\t\"darkviolet\": [\n\t\t148,\n\t\t0,\n\t\t211\n\t],\n\t\"deeppink\": [\n\t\t255,\n\t\t20,\n\t\t147\n\t],\n\t\"deepskyblue\": [\n\t\t0,\n\t\t191,\n\t\t255\n\t],\n\t\"dimgray\": [\n\t\t105,\n\t\t105,\n\t\t105\n\t],\n\t\"dimgrey\": [\n\t\t105,\n\t\t105,\n\t\t105\n\t],\n\t\"dodgerblue\": [\n\t\t30,\n\t\t144,\n\t\t255\n\t],\n\t\"firebrick\": [\n\t\t178,\n\t\t34,\n\t\t34\n\t],\n\t\"floralwhite\": [\n\t\t255,\n\t\t250,\n\t\t240\n\t],\n\t\"forestgreen\": [\n\t\t34,\n\t\t139,\n\t\t34\n\t],\n\t\"fuchsia\": [\n\t\t255,\n\t\t0,\n\t\t255\n\t],\n\t\"gainsboro\": [\n\t\t220,\n\t\t220,\n\t\t220\n\t],\n\t\"ghostwhite\": [\n\t\t248,\n\t\t248,\n\t\t255\n\t],\n\t\"gold\": [\n\t\t255,\n\t\t215,\n\t\t0\n\t],\n\t\"goldenrod\": [\n\t\t218,\n\t\t165,\n\t\t32\n\t],\n\t\"gray\": [\n\t\t128,\n\t\t128,\n\t\t128\n\t],\n\t\"green\": [\n\t\t0,\n\t\t128,\n\t\t0\n\t],\n\t\"greenyellow\": [\n\t\t173,\n\t\t255,\n\t\t47\n\t],\n\t\"grey\": [\n\t\t128,\n\t\t128,\n\t\t128\n\t],\n\t\"honeydew\": [\n\t\t240,\n\t\t255,\n\t\t240\n\t],\n\t\"hotpink\": [\n\t\t255,\n\t\t105,\n\t\t180\n\t],\n\t\"indianred\": [\n\t\t205,\n\t\t92,\n\t\t92\n\t],\n\t\"indigo\": [\n\t\t75,\n\t\t0,\n\t\t130\n\t],\n\t\"ivory\": [\n\t\t255,\n\t\t255,\n\t\t240\n\t],\n\t\"khaki\": [\n\t\t240,\n\t\t230,\n\t\t140\n\t],\n\t\"lavender\": [\n\t\t230,\n\t\t230,\n\t\t250\n\t],\n\t\"lavenderblush\": [\n\t\t255,\n\t\t240,\n\t\t245\n\t],\n\t\"lawngreen\": [\n\t\t124,\n\t\t252,\n\t\t0\n\t],\n\t\"lemonchiffon\": [\n\t\t255,\n\t\t250,\n\t\t205\n\t],\n\t\"lightblue\": [\n\t\t173,\n\t\t216,\n\t\t230\n\t],\n\t\"lightcoral\": [\n\t\t240,\n\t\t128,\n\t\t128\n\t],\n\t\"lightcyan\": [\n\t\t224,\n\t\t255,\n\t\t255\n\t],\n\t\"lightgoldenrodyellow\": [\n\t\t250,\n\t\t250,\n\t\t210\n\t],\n\t\"lightgray\": [\n\t\t211,\n\t\t211,\n\t\t211\n\t],\n\t\"lightgreen\": [\n\t\t144,\n\t\t238,\n\t\t144\n\t],\n\t\"lightgrey\": [\n\t\t211,\n\t\t211,\n\t\t211\n\t],\n\t\"lightpink\": [\n\t\t255,\n\t\t182,\n\t\t193\n\t],\n\t\"lightsalmon\": [\n\t\t255,\n\t\t160,\n\t\t122\n\t],\n\t\"lightseagreen\": [\n\t\t32,\n\t\t178,\n\t\t170\n\t],\n\t\"lightskyblue\": [\n\t\t135,\n\t\t206,\n\t\t250\n\t],\n\t\"lightslategray\": [\n\t\t119,\n\t\t136,\n\t\t153\n\t],\n\t\"lightslategrey\": [\n\t\t119,\n\t\t136,\n\t\t153\n\t],\n\t\"lightsteelblue\": [\n\t\t176,\n\t\t196,\n\t\t222\n\t],\n\t\"lightyellow\": [\n\t\t255,\n\t\t255,\n\t\t224\n\t],\n\t\"lime\": [\n\t\t0,\n\t\t255,\n\t\t0\n\t],\n\t\"limegreen\": [\n\t\t50,\n\t\t205,\n\t\t50\n\t],\n\t\"linen\": [\n\t\t250,\n\t\t240,\n\t\t230\n\t],\n\t\"magenta\": [\n\t\t255,\n\t\t0,\n\t\t255\n\t],\n\t\"maroon\": [\n\t\t128,\n\t\t0,\n\t\t0\n\t],\n\t\"mediumaquamarine\": [\n\t\t102,\n\t\t205,\n\t\t170\n\t],\n\t\"mediumblue\": [\n\t\t0,\n\t\t0,\n\t\t205\n\t],\n\t\"mediumorchid\": [\n\t\t186,\n\t\t85,\n\t\t211\n\t],\n\t\"mediumpurple\": [\n\t\t147,\n\t\t112,\n\t\t219\n\t],\n\t\"mediumseagreen\": [\n\t\t60,\n\t\t179,\n\t\t113\n\t],\n\t\"mediumslateblue\": [\n\t\t123,\n\t\t104,\n\t\t238\n\t],\n\t\"mediumspringgreen\": [\n\t\t0,\n\t\t250,\n\t\t154\n\t],\n\t\"mediumturquoise\": [\n\t\t72,\n\t\t209,\n\t\t204\n\t],\n\t\"mediumvioletred\": [\n\t\t199,\n\t\t21,\n\t\t133\n\t],\n\t\"midnightblue\": [\n\t\t25,\n\t\t25,\n\t\t112\n\t],\n\t\"mintcream\": [\n\t\t245,\n\t\t255,\n\t\t250\n\t],\n\t\"mistyrose\": [\n\t\t255,\n\t\t228,\n\t\t225\n\t],\n\t\"moccasin\": [\n\t\t255,\n\t\t228,\n\t\t181\n\t],\n\t\"navajowhite\": [\n\t\t255,\n\t\t222,\n\t\t173\n\t],\n\t\"navy\": [\n\t\t0,\n\t\t0,\n\t\t128\n\t],\n\t\"oldlace\": [\n\t\t253,\n\t\t245,\n\t\t230\n\t],\n\t\"olive\": [\n\t\t128,\n\t\t128,\n\t\t0\n\t],\n\t\"olivedrab\": [\n\t\t107,\n\t\t142,\n\t\t35\n\t],\n\t\"orange\": [\n\t\t255,\n\t\t165,\n\t\t0\n\t],\n\t\"orangered\": [\n\t\t255,\n\t\t69,\n\t\t0\n\t],\n\t\"orchid\": [\n\t\t218,\n\t\t112,\n\t\t214\n\t],\n\t\"palegoldenrod\": [\n\t\t238,\n\t\t232,\n\t\t170\n\t],\n\t\"palegreen\": [\n\t\t152,\n\t\t251,\n\t\t152\n\t],\n\t\"paleturquoise\": [\n\t\t175,\n\t\t238,\n\t\t238\n\t],\n\t\"palevioletred\": [\n\t\t219,\n\t\t112,\n\t\t147\n\t],\n\t\"papayawhip\": [\n\t\t255,\n\t\t239,\n\t\t213\n\t],\n\t\"peachpuff\": [\n\t\t255,\n\t\t218,\n\t\t185\n\t],\n\t\"peru\": [\n\t\t205,\n\t\t133,\n\t\t63\n\t],\n\t\"pink\": [\n\t\t255,\n\t\t192,\n\t\t203\n\t],\n\t\"plum\": [\n\t\t221,\n\t\t160,\n\t\t221\n\t],\n\t\"powderblue\": [\n\t\t176,\n\t\t224,\n\t\t230\n\t],\n\t\"purple\": [\n\t\t128,\n\t\t0,\n\t\t128\n\t],\n\t\"rebeccapurple\": [\n\t\t102,\n\t\t51,\n\t\t153\n\t],\n\t\"red\": [\n\t\t255,\n\t\t0,\n\t\t0\n\t],\n\t\"rosybrown\": [\n\t\t188,\n\t\t143,\n\t\t143\n\t],\n\t\"royalblue\": [\n\t\t65,\n\t\t105,\n\t\t225\n\t],\n\t\"saddlebrown\": [\n\t\t139,\n\t\t69,\n\t\t19\n\t],\n\t\"salmon\": [\n\t\t250,\n\t\t128,\n\t\t114\n\t],\n\t\"sandybrown\": [\n\t\t244,\n\t\t164,\n\t\t96\n\t],\n\t\"seagreen\": [\n\t\t46,\n\t\t139,\n\t\t87\n\t],\n\t\"seashell\": [\n\t\t255,\n\t\t245,\n\t\t238\n\t],\n\t\"sienna\": [\n\t\t160,\n\t\t82,\n\t\t45\n\t],\n\t\"silver\": [\n\t\t192,\n\t\t192,\n\t\t192\n\t],\n\t\"skyblue\": [\n\t\t135,\n\t\t206,\n\t\t235\n\t],\n\t\"slateblue\": [\n\t\t106,\n\t\t90,\n\t\t205\n\t],\n\t\"slategray\": [\n\t\t112,\n\t\t128,\n\t\t144\n\t],\n\t\"slategrey\": [\n\t\t112,\n\t\t128,\n\t\t144\n\t],\n\t\"snow\": [\n\t\t255,\n\t\t250,\n\t\t250\n\t],\n\t\"springgreen\": [\n\t\t0,\n\t\t255,\n\t\t127\n\t],\n\t\"steelblue\": [\n\t\t70,\n\t\t130,\n\t\t180\n\t],\n\t\"tan\": [\n\t\t210,\n\t\t180,\n\t\t140\n\t],\n\t\"teal\": [\n\t\t0,\n\t\t128,\n\t\t128\n\t],\n\t\"thistle\": [\n\t\t216,\n\t\t191,\n\t\t216\n\t],\n\t\"tomato\": [\n\t\t255,\n\t\t99,\n\t\t71\n\t],\n\t\"turquoise\": [\n\t\t64,\n\t\t224,\n\t\t208\n\t],\n\t\"violet\": [\n\t\t238,\n\t\t130,\n\t\t238\n\t],\n\t\"wheat\": [\n\t\t245,\n\t\t222,\n\t\t179\n\t],\n\t\"white\": [\n\t\t255,\n\t\t255,\n\t\t255\n\t],\n\t\"whitesmoke\": [\n\t\t245,\n\t\t245,\n\t\t245\n\t],\n\t\"yellow\": [\n\t\t255,\n\t\t255,\n\t\t0\n\t],\n\t\"yellowgreen\": [\n\t\t154,\n\t\t205,\n\t\t50\n\t]\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./palettes/css.json\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-define.js\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 18\n ** module chunks = 0\n **/"],"sourceRoot":""}